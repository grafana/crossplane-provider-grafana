//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicy) DeepCopyInto(out *AccessPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicy.
func (in *AccessPolicy) DeepCopy() *AccessPolicy {
	if in == nil {
		return nil
	}
	out := new(AccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyInitParameters) DeepCopyInto(out *AccessPolicyInitParameters) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = make([]RealmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyInitParameters.
func (in *AccessPolicyInitParameters) DeepCopy() *AccessPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyList) DeepCopyInto(out *AccessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyList.
func (in *AccessPolicyList) DeepCopy() *AccessPolicyList {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyObservation) DeepCopyInto(out *AccessPolicyObservation) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = make([]RealmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyObservation.
func (in *AccessPolicyObservation) DeepCopy() *AccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyParameters) DeepCopyInto(out *AccessPolicyParameters) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = make([]RealmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyParameters.
func (in *AccessPolicyParameters) DeepCopy() *AccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicySpec) DeepCopyInto(out *AccessPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicySpec.
func (in *AccessPolicySpec) DeepCopy() *AccessPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AccessPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyStatus) DeepCopyInto(out *AccessPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyStatus.
func (in *AccessPolicyStatus) DeepCopy() *AccessPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyToken) DeepCopyInto(out *AccessPolicyToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyToken.
func (in *AccessPolicyToken) DeepCopy() *AccessPolicyToken {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicyToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenInitParameters) DeepCopyInto(out *AccessPolicyTokenInitParameters) {
	*out = *in
	if in.AccessPolicyID != nil {
		in, out := &in.AccessPolicyID, &out.AccessPolicyID
		*out = new(string)
		**out = **in
	}
	if in.AccessPolicyRef != nil {
		in, out := &in.AccessPolicyRef, &out.AccessPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessPolicySelector != nil {
		in, out := &in.AccessPolicySelector, &out.AccessPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenInitParameters.
func (in *AccessPolicyTokenInitParameters) DeepCopy() *AccessPolicyTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenList) DeepCopyInto(out *AccessPolicyTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessPolicyToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenList.
func (in *AccessPolicyTokenList) DeepCopy() *AccessPolicyTokenList {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicyTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenObservation) DeepCopyInto(out *AccessPolicyTokenObservation) {
	*out = *in
	if in.AccessPolicyID != nil {
		in, out := &in.AccessPolicyID, &out.AccessPolicyID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenObservation.
func (in *AccessPolicyTokenObservation) DeepCopy() *AccessPolicyTokenObservation {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenParameters) DeepCopyInto(out *AccessPolicyTokenParameters) {
	*out = *in
	if in.AccessPolicyID != nil {
		in, out := &in.AccessPolicyID, &out.AccessPolicyID
		*out = new(string)
		**out = **in
	}
	if in.AccessPolicyRef != nil {
		in, out := &in.AccessPolicyRef, &out.AccessPolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessPolicySelector != nil {
		in, out := &in.AccessPolicySelector, &out.AccessPolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenParameters.
func (in *AccessPolicyTokenParameters) DeepCopy() *AccessPolicyTokenParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenSpec) DeepCopyInto(out *AccessPolicyTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenSpec.
func (in *AccessPolicyTokenSpec) DeepCopy() *AccessPolicyTokenSpec {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyTokenStatus) DeepCopyInto(out *AccessPolicyTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyTokenStatus.
func (in *AccessPolicyTokenStatus) DeepCopy() *AccessPolicyTokenStatus {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.AllowedSubnets != nil {
		in, out := &in.AllowedSubnets, &out.AllowedSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.AllowedSubnets != nil {
		in, out := &in.AllowedSubnets, &out.AllowedSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.AllowedSubnets != nil {
		in, out := &in.AllowedSubnets, &out.AllowedSubnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyInitParameters) DeepCopyInto(out *LabelPolicyInitParameters) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyInitParameters.
func (in *LabelPolicyInitParameters) DeepCopy() *LabelPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyObservation) DeepCopyInto(out *LabelPolicyObservation) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyObservation.
func (in *LabelPolicyObservation) DeepCopy() *LabelPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyParameters) DeepCopyInto(out *LabelPolicyParameters) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyParameters.
func (in *LabelPolicyParameters) DeepCopy() *LabelPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMember) DeepCopyInto(out *OrgMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMember.
func (in *OrgMember) DeepCopy() *OrgMember {
	if in == nil {
		return nil
	}
	out := new(OrgMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberInitParameters) DeepCopyInto(out *OrgMemberInitParameters) {
	*out = *in
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.ReceiveBillingEmails != nil {
		in, out := &in.ReceiveBillingEmails, &out.ReceiveBillingEmails
		*out = new(bool)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberInitParameters.
func (in *OrgMemberInitParameters) DeepCopy() *OrgMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrgMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberList) DeepCopyInto(out *OrgMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrgMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberList.
func (in *OrgMemberList) DeepCopy() *OrgMemberList {
	if in == nil {
		return nil
	}
	out := new(OrgMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberObservation) DeepCopyInto(out *OrgMemberObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.ReceiveBillingEmails != nil {
		in, out := &in.ReceiveBillingEmails, &out.ReceiveBillingEmails
		*out = new(bool)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberObservation.
func (in *OrgMemberObservation) DeepCopy() *OrgMemberObservation {
	if in == nil {
		return nil
	}
	out := new(OrgMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberParameters) DeepCopyInto(out *OrgMemberParameters) {
	*out = *in
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.ReceiveBillingEmails != nil {
		in, out := &in.ReceiveBillingEmails, &out.ReceiveBillingEmails
		*out = new(bool)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberParameters.
func (in *OrgMemberParameters) DeepCopy() *OrgMemberParameters {
	if in == nil {
		return nil
	}
	out := new(OrgMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberSpec) DeepCopyInto(out *OrgMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberSpec.
func (in *OrgMemberSpec) DeepCopy() *OrgMemberSpec {
	if in == nil {
		return nil
	}
	out := new(OrgMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgMemberStatus) DeepCopyInto(out *OrgMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgMemberStatus.
func (in *OrgMemberStatus) DeepCopy() *OrgMemberStatus {
	if in == nil {
		return nil
	}
	out := new(OrgMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallation) DeepCopyInto(out *PluginInstallation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallation.
func (in *PluginInstallation) DeepCopy() *PluginInstallation {
	if in == nil {
		return nil
	}
	out := new(PluginInstallation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluginInstallation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationInitParameters) DeepCopyInto(out *PluginInstallationInitParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationInitParameters.
func (in *PluginInstallationInitParameters) DeepCopy() *PluginInstallationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationList) DeepCopyInto(out *PluginInstallationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PluginInstallation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationList.
func (in *PluginInstallationList) DeepCopy() *PluginInstallationList {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PluginInstallationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationObservation) DeepCopyInto(out *PluginInstallationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationObservation.
func (in *PluginInstallationObservation) DeepCopy() *PluginInstallationObservation {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationParameters) DeepCopyInto(out *PluginInstallationParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationParameters.
func (in *PluginInstallationParameters) DeepCopy() *PluginInstallationParameters {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationSpec) DeepCopyInto(out *PluginInstallationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationSpec.
func (in *PluginInstallationSpec) DeepCopy() *PluginInstallationSpec {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInstallationStatus) DeepCopyInto(out *PluginInstallationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInstallationStatus.
func (in *PluginInstallationStatus) DeepCopy() *PluginInstallationStatus {
	if in == nil {
		return nil
	}
	out := new(PluginInstallationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetwork) DeepCopyInto(out *PrivateDataSourceConnectNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetwork.
func (in *PrivateDataSourceConnectNetwork) DeepCopy() *PrivateDataSourceConnectNetwork {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataSourceConnectNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkInitParameters) DeepCopyInto(out *PrivateDataSourceConnectNetworkInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackIdentifier != nil {
		in, out := &in.StackIdentifier, &out.StackIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkInitParameters.
func (in *PrivateDataSourceConnectNetworkInitParameters) DeepCopy() *PrivateDataSourceConnectNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkList) DeepCopyInto(out *PrivateDataSourceConnectNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDataSourceConnectNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkList.
func (in *PrivateDataSourceConnectNetworkList) DeepCopy() *PrivateDataSourceConnectNetworkList {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataSourceConnectNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkObservation) DeepCopyInto(out *PrivateDataSourceConnectNetworkObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PdcNetworkID != nil {
		in, out := &in.PdcNetworkID, &out.PdcNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackIdentifier != nil {
		in, out := &in.StackIdentifier, &out.StackIdentifier
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkObservation.
func (in *PrivateDataSourceConnectNetworkObservation) DeepCopy() *PrivateDataSourceConnectNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkParameters) DeepCopyInto(out *PrivateDataSourceConnectNetworkParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackIdentifier != nil {
		in, out := &in.StackIdentifier, &out.StackIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkParameters.
func (in *PrivateDataSourceConnectNetworkParameters) DeepCopy() *PrivateDataSourceConnectNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkSpec) DeepCopyInto(out *PrivateDataSourceConnectNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkSpec.
func (in *PrivateDataSourceConnectNetworkSpec) DeepCopy() *PrivateDataSourceConnectNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkStatus) DeepCopyInto(out *PrivateDataSourceConnectNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkStatus.
func (in *PrivateDataSourceConnectNetworkStatus) DeepCopy() *PrivateDataSourceConnectNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkToken) DeepCopyInto(out *PrivateDataSourceConnectNetworkToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkToken.
func (in *PrivateDataSourceConnectNetworkToken) DeepCopy() *PrivateDataSourceConnectNetworkToken {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataSourceConnectNetworkToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenInitParameters) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PdcNetworkID != nil {
		in, out := &in.PdcNetworkID, &out.PdcNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenInitParameters.
func (in *PrivateDataSourceConnectNetworkTokenInitParameters) DeepCopy() *PrivateDataSourceConnectNetworkTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenList) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDataSourceConnectNetworkToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenList.
func (in *PrivateDataSourceConnectNetworkTokenList) DeepCopy() *PrivateDataSourceConnectNetworkTokenList {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataSourceConnectNetworkTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenObservation) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PdcNetworkID != nil {
		in, out := &in.PdcNetworkID, &out.PdcNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenObservation.
func (in *PrivateDataSourceConnectNetworkTokenObservation) DeepCopy() *PrivateDataSourceConnectNetworkTokenObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenParameters) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PdcNetworkID != nil {
		in, out := &in.PdcNetworkID, &out.PdcNetworkID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenParameters.
func (in *PrivateDataSourceConnectNetworkTokenParameters) DeepCopy() *PrivateDataSourceConnectNetworkTokenParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenSpec) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenSpec.
func (in *PrivateDataSourceConnectNetworkTokenSpec) DeepCopy() *PrivateDataSourceConnectNetworkTokenSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataSourceConnectNetworkTokenStatus) DeepCopyInto(out *PrivateDataSourceConnectNetworkTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataSourceConnectNetworkTokenStatus.
func (in *PrivateDataSourceConnectNetworkTokenStatus) DeepCopy() *PrivateDataSourceConnectNetworkTokenStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDataSourceConnectNetworkTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealmInitParameters) DeepCopyInto(out *RealmInitParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.LabelPolicy != nil {
		in, out := &in.LabelPolicy, &out.LabelPolicy
		*out = make([]LabelPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackRef != nil {
		in, out := &in.StackRef, &out.StackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackSelector != nil {
		in, out := &in.StackSelector, &out.StackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealmInitParameters.
func (in *RealmInitParameters) DeepCopy() *RealmInitParameters {
	if in == nil {
		return nil
	}
	out := new(RealmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealmObservation) DeepCopyInto(out *RealmObservation) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.LabelPolicy != nil {
		in, out := &in.LabelPolicy, &out.LabelPolicy
		*out = make([]LabelPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealmObservation.
func (in *RealmObservation) DeepCopy() *RealmObservation {
	if in == nil {
		return nil
	}
	out := new(RealmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealmParameters) DeepCopyInto(out *RealmParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.LabelPolicy != nil {
		in, out := &in.LabelPolicy, &out.LabelPolicy
		*out = make([]LabelPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackRef != nil {
		in, out := &in.StackRef, &out.StackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackSelector != nil {
		in, out := &in.StackSelector, &out.StackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealmParameters.
func (in *RealmParameters) DeepCopy() *RealmParameters {
	if in == nil {
		return nil
	}
	out := new(RealmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stack) DeepCopyInto(out *Stack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stack.
func (in *Stack) DeepCopy() *Stack {
	if in == nil {
		return nil
	}
	out := new(Stack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackInitParameters) DeepCopyInto(out *StackInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionSlug != nil {
		in, out := &in.RegionSlug, &out.RegionSlug
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitForReadiness != nil {
		in, out := &in.WaitForReadiness, &out.WaitForReadiness
		*out = new(bool)
		**out = **in
	}
	if in.WaitForReadinessTimeout != nil {
		in, out := &in.WaitForReadinessTimeout, &out.WaitForReadinessTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackInitParameters.
func (in *StackInitParameters) DeepCopy() *StackInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackList) DeepCopyInto(out *StackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackList.
func (in *StackList) DeepCopy() *StackList {
	if in == nil {
		return nil
	}
	out := new(StackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackObservation) DeepCopyInto(out *StackObservation) {
	*out = *in
	if in.AlertmanagerIPAllowListCname != nil {
		in, out := &in.AlertmanagerIPAllowListCname, &out.AlertmanagerIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.AlertmanagerName != nil {
		in, out := &in.AlertmanagerName, &out.AlertmanagerName
		*out = new(string)
		**out = **in
	}
	if in.AlertmanagerStatus != nil {
		in, out := &in.AlertmanagerStatus, &out.AlertmanagerStatus
		*out = new(string)
		**out = **in
	}
	if in.AlertmanagerURL != nil {
		in, out := &in.AlertmanagerURL, &out.AlertmanagerURL
		*out = new(string)
		**out = **in
	}
	if in.AlertmanagerUserID != nil {
		in, out := &in.AlertmanagerUserID, &out.AlertmanagerUserID
		*out = new(float64)
		**out = **in
	}
	if in.ClusterSlug != nil {
		in, out := &in.ClusterSlug, &out.ClusterSlug
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FleetManagementName != nil {
		in, out := &in.FleetManagementName, &out.FleetManagementName
		*out = new(string)
		**out = **in
	}
	if in.FleetManagementStatus != nil {
		in, out := &in.FleetManagementStatus, &out.FleetManagementStatus
		*out = new(string)
		**out = **in
	}
	if in.FleetManagementURL != nil {
		in, out := &in.FleetManagementURL, &out.FleetManagementURL
		*out = new(string)
		**out = **in
	}
	if in.FleetManagementUserID != nil {
		in, out := &in.FleetManagementUserID, &out.FleetManagementUserID
		*out = new(float64)
		**out = **in
	}
	if in.GrafanasIPAllowListCname != nil {
		in, out := &in.GrafanasIPAllowListCname, &out.GrafanasIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.GraphiteIPAllowListCname != nil {
		in, out := &in.GraphiteIPAllowListCname, &out.GraphiteIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.GraphiteName != nil {
		in, out := &in.GraphiteName, &out.GraphiteName
		*out = new(string)
		**out = **in
	}
	if in.GraphitePrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.GraphitePrivateConnectivityInfoPrivateDNS, &out.GraphitePrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.GraphitePrivateConnectivityInfoServiceName != nil {
		in, out := &in.GraphitePrivateConnectivityInfoServiceName, &out.GraphitePrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.GraphiteStatus != nil {
		in, out := &in.GraphiteStatus, &out.GraphiteStatus
		*out = new(string)
		**out = **in
	}
	if in.GraphiteURL != nil {
		in, out := &in.GraphiteURL, &out.GraphiteURL
		*out = new(string)
		**out = **in
	}
	if in.GraphiteUserID != nil {
		in, out := &in.GraphiteUserID, &out.GraphiteUserID
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InfluxURL != nil {
		in, out := &in.InfluxURL, &out.InfluxURL
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LogsIPAllowListCname != nil {
		in, out := &in.LogsIPAllowListCname, &out.LogsIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.LogsName != nil {
		in, out := &in.LogsName, &out.LogsName
		*out = new(string)
		**out = **in
	}
	if in.LogsPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.LogsPrivateConnectivityInfoPrivateDNS, &out.LogsPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.LogsPrivateConnectivityInfoServiceName != nil {
		in, out := &in.LogsPrivateConnectivityInfoServiceName, &out.LogsPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.LogsStatus != nil {
		in, out := &in.LogsStatus, &out.LogsStatus
		*out = new(string)
		**out = **in
	}
	if in.LogsURL != nil {
		in, out := &in.LogsURL, &out.LogsURL
		*out = new(string)
		**out = **in
	}
	if in.LogsUserID != nil {
		in, out := &in.LogsUserID, &out.LogsUserID
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(float64)
		**out = **in
	}
	if in.OrgName != nil {
		in, out := &in.OrgName, &out.OrgName
		*out = new(string)
		**out = **in
	}
	if in.OrgSlug != nil {
		in, out := &in.OrgSlug, &out.OrgSlug
		*out = new(string)
		**out = **in
	}
	if in.OtlpPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.OtlpPrivateConnectivityInfoPrivateDNS, &out.OtlpPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.OtlpPrivateConnectivityInfoServiceName != nil {
		in, out := &in.OtlpPrivateConnectivityInfoServiceName, &out.OtlpPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.OtlpURL != nil {
		in, out := &in.OtlpURL, &out.OtlpURL
		*out = new(string)
		**out = **in
	}
	if in.PdcAPIPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.PdcAPIPrivateConnectivityInfoPrivateDNS, &out.PdcAPIPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PdcAPIPrivateConnectivityInfoServiceName != nil {
		in, out := &in.PdcAPIPrivateConnectivityInfoServiceName, &out.PdcAPIPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.PdcGatewayPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.PdcGatewayPrivateConnectivityInfoPrivateDNS, &out.PdcGatewayPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PdcGatewayPrivateConnectivityInfoServiceName != nil {
		in, out := &in.PdcGatewayPrivateConnectivityInfoServiceName, &out.PdcGatewayPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.ProfilesIPAllowListCname != nil {
		in, out := &in.ProfilesIPAllowListCname, &out.ProfilesIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.ProfilesName != nil {
		in, out := &in.ProfilesName, &out.ProfilesName
		*out = new(string)
		**out = **in
	}
	if in.ProfilesPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.ProfilesPrivateConnectivityInfoPrivateDNS, &out.ProfilesPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.ProfilesPrivateConnectivityInfoServiceName != nil {
		in, out := &in.ProfilesPrivateConnectivityInfoServiceName, &out.ProfilesPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.ProfilesStatus != nil {
		in, out := &in.ProfilesStatus, &out.ProfilesStatus
		*out = new(string)
		**out = **in
	}
	if in.ProfilesURL != nil {
		in, out := &in.ProfilesURL, &out.ProfilesURL
		*out = new(string)
		**out = **in
	}
	if in.ProfilesUserID != nil {
		in, out := &in.ProfilesUserID, &out.ProfilesUserID
		*out = new(float64)
		**out = **in
	}
	if in.PrometheusIPAllowListCname != nil {
		in, out := &in.PrometheusIPAllowListCname, &out.PrometheusIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.PrometheusName != nil {
		in, out := &in.PrometheusName, &out.PrometheusName
		*out = new(string)
		**out = **in
	}
	if in.PrometheusPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.PrometheusPrivateConnectivityInfoPrivateDNS, &out.PrometheusPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrometheusPrivateConnectivityInfoServiceName != nil {
		in, out := &in.PrometheusPrivateConnectivityInfoServiceName, &out.PrometheusPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.PrometheusRemoteEndpoint != nil {
		in, out := &in.PrometheusRemoteEndpoint, &out.PrometheusRemoteEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrometheusRemoteWriteEndpoint != nil {
		in, out := &in.PrometheusRemoteWriteEndpoint, &out.PrometheusRemoteWriteEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrometheusStatus != nil {
		in, out := &in.PrometheusStatus, &out.PrometheusStatus
		*out = new(string)
		**out = **in
	}
	if in.PrometheusURL != nil {
		in, out := &in.PrometheusURL, &out.PrometheusURL
		*out = new(string)
		**out = **in
	}
	if in.PrometheusUserID != nil {
		in, out := &in.PrometheusUserID, &out.PrometheusUserID
		*out = new(float64)
		**out = **in
	}
	if in.RegionSlug != nil {
		in, out := &in.RegionSlug, &out.RegionSlug
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TracesIPAllowListCname != nil {
		in, out := &in.TracesIPAllowListCname, &out.TracesIPAllowListCname
		*out = new(string)
		**out = **in
	}
	if in.TracesName != nil {
		in, out := &in.TracesName, &out.TracesName
		*out = new(string)
		**out = **in
	}
	if in.TracesPrivateConnectivityInfoPrivateDNS != nil {
		in, out := &in.TracesPrivateConnectivityInfoPrivateDNS, &out.TracesPrivateConnectivityInfoPrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.TracesPrivateConnectivityInfoServiceName != nil {
		in, out := &in.TracesPrivateConnectivityInfoServiceName, &out.TracesPrivateConnectivityInfoServiceName
		*out = new(string)
		**out = **in
	}
	if in.TracesStatus != nil {
		in, out := &in.TracesStatus, &out.TracesStatus
		*out = new(string)
		**out = **in
	}
	if in.TracesURL != nil {
		in, out := &in.TracesURL, &out.TracesURL
		*out = new(string)
		**out = **in
	}
	if in.TracesUserID != nil {
		in, out := &in.TracesUserID, &out.TracesUserID
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitForReadiness != nil {
		in, out := &in.WaitForReadiness, &out.WaitForReadiness
		*out = new(bool)
		**out = **in
	}
	if in.WaitForReadinessTimeout != nil {
		in, out := &in.WaitForReadinessTimeout, &out.WaitForReadinessTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackObservation.
func (in *StackObservation) DeepCopy() *StackObservation {
	if in == nil {
		return nil
	}
	out := new(StackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackParameters) DeepCopyInto(out *StackParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegionSlug != nil {
		in, out := &in.RegionSlug, &out.RegionSlug
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WaitForReadiness != nil {
		in, out := &in.WaitForReadiness, &out.WaitForReadiness
		*out = new(bool)
		**out = **in
	}
	if in.WaitForReadinessTimeout != nil {
		in, out := &in.WaitForReadinessTimeout, &out.WaitForReadinessTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackParameters.
func (in *StackParameters) DeepCopy() *StackParameters {
	if in == nil {
		return nil
	}
	out := new(StackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccount) DeepCopyInto(out *StackServiceAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccount.
func (in *StackServiceAccount) DeepCopy() *StackServiceAccount {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackServiceAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountInitParameters) DeepCopyInto(out *StackServiceAccountInitParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountInitParameters.
func (in *StackServiceAccountInitParameters) DeepCopy() *StackServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountList) DeepCopyInto(out *StackServiceAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StackServiceAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountList.
func (in *StackServiceAccountList) DeepCopy() *StackServiceAccountList {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackServiceAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountObservation) DeepCopyInto(out *StackServiceAccountObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountObservation.
func (in *StackServiceAccountObservation) DeepCopy() *StackServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountParameters) DeepCopyInto(out *StackServiceAccountParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountParameters.
func (in *StackServiceAccountParameters) DeepCopy() *StackServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountSpec) DeepCopyInto(out *StackServiceAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountSpec.
func (in *StackServiceAccountSpec) DeepCopy() *StackServiceAccountSpec {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountStatus) DeepCopyInto(out *StackServiceAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountStatus.
func (in *StackServiceAccountStatus) DeepCopy() *StackServiceAccountStatus {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountToken) DeepCopyInto(out *StackServiceAccountToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountToken.
func (in *StackServiceAccountToken) DeepCopy() *StackServiceAccountToken {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackServiceAccountToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenInitParameters) DeepCopyInto(out *StackServiceAccountTokenInitParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenInitParameters.
func (in *StackServiceAccountTokenInitParameters) DeepCopy() *StackServiceAccountTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenList) DeepCopyInto(out *StackServiceAccountTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StackServiceAccountToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenList.
func (in *StackServiceAccountTokenList) DeepCopy() *StackServiceAccountTokenList {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackServiceAccountTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenObservation) DeepCopyInto(out *StackServiceAccountTokenObservation) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HasExpired != nil {
		in, out := &in.HasExpired, &out.HasExpired
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenObservation.
func (in *StackServiceAccountTokenObservation) DeepCopy() *StackServiceAccountTokenObservation {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenParameters) DeepCopyInto(out *StackServiceAccountTokenParameters) {
	*out = *in
	if in.CloudStackRef != nil {
		in, out := &in.CloudStackRef, &out.CloudStackRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudStackSelector != nil {
		in, out := &in.CloudStackSelector, &out.CloudStackSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackSlug != nil {
		in, out := &in.StackSlug, &out.StackSlug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenParameters.
func (in *StackServiceAccountTokenParameters) DeepCopy() *StackServiceAccountTokenParameters {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenSpec) DeepCopyInto(out *StackServiceAccountTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenSpec.
func (in *StackServiceAccountTokenSpec) DeepCopy() *StackServiceAccountTokenSpec {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackServiceAccountTokenStatus) DeepCopyInto(out *StackServiceAccountTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackServiceAccountTokenStatus.
func (in *StackServiceAccountTokenStatus) DeepCopy() *StackServiceAccountTokenStatus {
	if in == nil {
		return nil
	}
	out := new(StackServiceAccountTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackSpec) DeepCopyInto(out *StackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackSpec.
func (in *StackSpec) DeepCopy() *StackSpec {
	if in == nil {
		return nil
	}
	out := new(StackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackStatus) DeepCopyInto(out *StackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackStatus.
func (in *StackStatus) DeepCopy() *StackStatus {
	if in == nil {
		return nil
	}
	out := new(StackStatus)
	in.DeepCopyInto(out)
	return out
}
