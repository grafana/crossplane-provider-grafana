// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessPolicyTokenInitParameters struct {

	// (String) ID of the access policy for which to create a token.
	// ID of the access policy for which to create a token.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/cloud/v1alpha1.AccessPolicy
	// +crossplane:generate:reference:refFieldName=AccessPolicyRef
	// +crossplane:generate:reference:selectorFieldName=AccessPolicySelector
	AccessPolicyID *string `json:"accessPolicyId,omitempty" tf:"access_policy_id,omitempty"`

	// Reference to a AccessPolicy in cloud to populate accessPolicyId.
	// +kubebuilder:validation:Optional
	AccessPolicyRef *v1.Reference `json:"accessPolicyRef,omitempty" tf:"-"`

	// Selector for a AccessPolicy in cloud to populate accessPolicyId.
	// +kubebuilder:validation:Optional
	AccessPolicySelector *v1.Selector `json:"accessPolicySelector,omitempty" tf:"-"`

	// (String) Display name of the access policy token. Defaults to the name.
	// Display name of the access policy token. Defaults to the name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the access policy token. Does not expire by default.
	// Expiration date of the access policy token. Does not expire by default.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) Name of the access policy token.
	// Name of the access policy token.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type AccessPolicyTokenObservation struct {

	// (String) ID of the access policy for which to create a token.
	// ID of the access policy for which to create a token.
	AccessPolicyID *string `json:"accessPolicyId,omitempty" tf:"access_policy_id,omitempty"`

	// (String) Creation date of the access policy token.
	// Creation date of the access policy token.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) Display name of the access policy token. Defaults to the name.
	// Display name of the access policy token. Defaults to the name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the access policy token. Does not expire by default.
	// Expiration date of the access policy token. Does not expire by default.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the access policy token.
	// Name of the access policy token.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String) Last update date of the access policy token.
	// Last update date of the access policy token.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type AccessPolicyTokenParameters struct {

	// (String) ID of the access policy for which to create a token.
	// ID of the access policy for which to create a token.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/cloud/v1alpha1.AccessPolicy
	// +crossplane:generate:reference:refFieldName=AccessPolicyRef
	// +crossplane:generate:reference:selectorFieldName=AccessPolicySelector
	// +kubebuilder:validation:Optional
	AccessPolicyID *string `json:"accessPolicyId,omitempty" tf:"access_policy_id,omitempty"`

	// Reference to a AccessPolicy in cloud to populate accessPolicyId.
	// +kubebuilder:validation:Optional
	AccessPolicyRef *v1.Reference `json:"accessPolicyRef,omitempty" tf:"-"`

	// Selector for a AccessPolicy in cloud to populate accessPolicyId.
	// +kubebuilder:validation:Optional
	AccessPolicySelector *v1.Selector `json:"accessPolicySelector,omitempty" tf:"-"`

	// (String) Display name of the access policy token. Defaults to the name.
	// Display name of the access policy token. Defaults to the name.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the access policy token. Does not expire by default.
	// Expiration date of the access policy token. Does not expire by default.
	// +kubebuilder:validation:Optional
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) Name of the access policy token.
	// Name of the access policy token.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the access policy. Should be set to the same region as the access policy. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// AccessPolicyTokenSpec defines the desired state of AccessPolicyToken
type AccessPolicyTokenSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccessPolicyTokenParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccessPolicyTokenInitParameters `json:"initProvider,omitempty"`
}

// AccessPolicyTokenStatus defines the observed state of AccessPolicyToken.
type AccessPolicyTokenStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccessPolicyTokenObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccessPolicyToken is the Schema for the AccessPolicyTokens API. Official documentation https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/API documentation https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-a-token Required access policy scopes: accesspolicies:readaccesspolicies:writeaccesspolicies:delete
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,grafana}
type AccessPolicyToken struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.region) || (has(self.initProvider) && has(self.initProvider.region))",message="spec.forProvider.region is a required parameter"
	Spec   AccessPolicyTokenSpec   `json:"spec"`
	Status AccessPolicyTokenStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccessPolicyTokenList contains a list of AccessPolicyTokens
type AccessPolicyTokenList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccessPolicyToken `json:"items"`
}

// Repository type metadata.
var (
	AccessPolicyToken_Kind             = "AccessPolicyToken"
	AccessPolicyToken_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccessPolicyToken_Kind}.String()
	AccessPolicyToken_KindAPIVersion   = AccessPolicyToken_Kind + "." + CRDGroupVersion.String()
	AccessPolicyToken_GroupVersionKind = CRDGroupVersion.WithKind(AccessPolicyToken_Kind)
)

func init() {
	SchemeBuilder.Register(&AccessPolicyToken{}, &AccessPolicyTokenList{})
}
