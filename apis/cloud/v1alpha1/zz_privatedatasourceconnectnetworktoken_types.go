/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PrivateDataSourceConnectNetworkTokenInitParameters struct {

	// (String) Display name of the private data source network token. Defaults to the name.
	// Display name of the private data source network token. Defaults to the name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the private data source network token. Does not expire by default.
	// Expiration date of the private data source network token. Does not expire by default.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) Name of the private data source network token.
	// Name of the private data source network token.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) ID of the private data source network for which to create a token.
	// ID of the private data source network for which to create a token.
	PdcNetworkID *string `json:"pdcNetworkId,omitempty" tf:"pdc_network_id,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PrivateDataSourceConnectNetworkTokenObservation struct {

	// (String) Creation date of the private data source network token.
	// Creation date of the private data source network token.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) Display name of the private data source network token. Defaults to the name.
	// Display name of the private data source network token. Defaults to the name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the private data source network token. Does not expire by default.
	// Expiration date of the private data source network token. Does not expire by default.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the private data source network token.
	// Name of the private data source network token.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) ID of the private data source network for which to create a token.
	// ID of the private data source network for which to create a token.
	PdcNetworkID *string `json:"pdcNetworkId,omitempty" tf:"pdc_network_id,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String) Last update date of the private data source network token.
	// Last update date of the private data source network token.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type PrivateDataSourceConnectNetworkTokenParameters struct {

	// (String) Display name of the private data source network token. Defaults to the name.
	// Display name of the private data source network token. Defaults to the name.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) Expiration date of the private data source network token. Does not expire by default.
	// Expiration date of the private data source network token. Does not expire by default.
	// +kubebuilder:validation:Optional
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) Name of the private data source network token.
	// Name of the private data source network token.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) ID of the private data source network for which to create a token.
	// ID of the private data source network for which to create a token.
	// +kubebuilder:validation:Optional
	PdcNetworkID *string `json:"pdcNetworkId,omitempty" tf:"pdc_network_id,omitempty"`

	// cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// Region of the private data source network. Should be set to the same region as the private data source network. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// PrivateDataSourceConnectNetworkTokenSpec defines the desired state of PrivateDataSourceConnectNetworkToken
type PrivateDataSourceConnectNetworkTokenSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrivateDataSourceConnectNetworkTokenParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivateDataSourceConnectNetworkTokenInitParameters `json:"initProvider,omitempty"`
}

// PrivateDataSourceConnectNetworkTokenStatus defines the observed state of PrivateDataSourceConnectNetworkToken.
type PrivateDataSourceConnectNetworkTokenStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivateDataSourceConnectNetworkTokenObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivateDataSourceConnectNetworkToken is the Schema for the PrivateDataSourceConnectNetworkTokens API. Official documentation https://grafana.com/docs/grafana-cloud/connect-externally-hosted/private-data-source-connect/API documentation https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#create-a-token Required access policy scopes: accesspolicies:readaccesspolicies:writeaccesspolicies:delete
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,grafana}
type PrivateDataSourceConnectNetworkToken struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pdcNetworkId) || (has(self.initProvider) && has(self.initProvider.pdcNetworkId))",message="spec.forProvider.pdcNetworkId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.region) || (has(self.initProvider) && has(self.initProvider.region))",message="spec.forProvider.region is a required parameter"
	Spec   PrivateDataSourceConnectNetworkTokenSpec   `json:"spec"`
	Status PrivateDataSourceConnectNetworkTokenStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivateDataSourceConnectNetworkTokenList contains a list of PrivateDataSourceConnectNetworkTokens
type PrivateDataSourceConnectNetworkTokenList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateDataSourceConnectNetworkToken `json:"items"`
}

// Repository type metadata.
var (
	PrivateDataSourceConnectNetworkToken_Kind             = "PrivateDataSourceConnectNetworkToken"
	PrivateDataSourceConnectNetworkToken_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivateDataSourceConnectNetworkToken_Kind}.String()
	PrivateDataSourceConnectNetworkToken_KindAPIVersion   = PrivateDataSourceConnectNetworkToken_Kind + "." + CRDGroupVersion.String()
	PrivateDataSourceConnectNetworkToken_GroupVersionKind = CRDGroupVersion.WithKind(PrivateDataSourceConnectNetworkToken_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivateDataSourceConnectNetworkToken{}, &PrivateDataSourceConnectNetworkTokenList{})
}
