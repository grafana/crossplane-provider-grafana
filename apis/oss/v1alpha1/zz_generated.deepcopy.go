//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKey) DeepCopyInto(out *APIKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKey.
func (in *APIKey) DeepCopy() *APIKey {
	if in == nil {
		return nil
	}
	out := new(APIKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyInitParameters) DeepCopyInto(out *APIKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyInitParameters.
func (in *APIKeyInitParameters) DeepCopy() *APIKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyList) DeepCopyInto(out *APIKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyList.
func (in *APIKeyList) DeepCopy() *APIKeyList {
	if in == nil {
		return nil
	}
	out := new(APIKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyObservation) DeepCopyInto(out *APIKeyObservation) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyObservation.
func (in *APIKeyObservation) DeepCopy() *APIKeyObservation {
	if in == nil {
		return nil
	}
	out := new(APIKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyParameters) DeepCopyInto(out *APIKeyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyParameters.
func (in *APIKeyParameters) DeepCopy() *APIKeyParameters {
	if in == nil {
		return nil
	}
	out := new(APIKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeySpec) DeepCopyInto(out *APIKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeySpec.
func (in *APIKeySpec) DeepCopy() *APIKeySpec {
	if in == nil {
		return nil
	}
	out := new(APIKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyStatus) DeepCopyInto(out *APIKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyStatus.
func (in *APIKeyStatus) DeepCopy() *APIKeyStatus {
	if in == nil {
		return nil
	}
	out := new(APIKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Annotation) DeepCopyInto(out *Annotation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Annotation.
func (in *Annotation) DeepCopy() *Annotation {
	if in == nil {
		return nil
	}
	out := new(Annotation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Annotation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationInitParameters) DeepCopyInto(out *AnnotationInitParameters) {
	*out = *in
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PanelID != nil {
		in, out := &in.PanelID, &out.PanelID
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.TimeEnd != nil {
		in, out := &in.TimeEnd, &out.TimeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationInitParameters.
func (in *AnnotationInitParameters) DeepCopy() *AnnotationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnnotationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationList) DeepCopyInto(out *AnnotationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Annotation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationList.
func (in *AnnotationList) DeepCopy() *AnnotationList {
	if in == nil {
		return nil
	}
	out := new(AnnotationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnnotationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationObservation) DeepCopyInto(out *AnnotationObservation) {
	*out = *in
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PanelID != nil {
		in, out := &in.PanelID, &out.PanelID
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.TimeEnd != nil {
		in, out := &in.TimeEnd, &out.TimeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationObservation.
func (in *AnnotationObservation) DeepCopy() *AnnotationObservation {
	if in == nil {
		return nil
	}
	out := new(AnnotationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationParameters) DeepCopyInto(out *AnnotationParameters) {
	*out = *in
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PanelID != nil {
		in, out := &in.PanelID, &out.PanelID
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.TimeEnd != nil {
		in, out := &in.TimeEnd, &out.TimeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationParameters.
func (in *AnnotationParameters) DeepCopy() *AnnotationParameters {
	if in == nil {
		return nil
	}
	out := new(AnnotationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationSpec) DeepCopyInto(out *AnnotationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationSpec.
func (in *AnnotationSpec) DeepCopy() *AnnotationSpec {
	if in == nil {
		return nil
	}
	out := new(AnnotationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnotationStatus) DeepCopyInto(out *AnnotationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnotationStatus.
func (in *AnnotationStatus) DeepCopy() *AnnotationStatus {
	if in == nil {
		return nil
	}
	out := new(AnnotationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dashboard) DeepCopyInto(out *Dashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dashboard.
func (in *Dashboard) DeepCopy() *Dashboard {
	if in == nil {
		return nil
	}
	out := new(Dashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardInitParameters) DeepCopyInto(out *DashboardInitParameters) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardInitParameters.
func (in *DashboardInitParameters) DeepCopy() *DashboardInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardList) DeepCopyInto(out *DashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardList.
func (in *DashboardList) DeepCopy() *DashboardList {
	if in == nil {
		return nil
	}
	out := new(DashboardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardObservation) DeepCopyInto(out *DashboardObservation) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.DashboardID != nil {
		in, out := &in.DashboardID, &out.DashboardID
		*out = new(float64)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardObservation.
func (in *DashboardObservation) DeepCopy() *DashboardObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardParameters) DeepCopyInto(out *DashboardParameters) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardParameters.
func (in *DashboardParameters) DeepCopy() *DashboardParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermission) DeepCopyInto(out *DashboardPermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermission.
func (in *DashboardPermission) DeepCopy() *DashboardPermission {
	if in == nil {
		return nil
	}
	out := new(DashboardPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardPermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionInitParameters) DeepCopyInto(out *DashboardPermissionInitParameters) {
	*out = *in
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionInitParameters.
func (in *DashboardPermissionInitParameters) DeepCopy() *DashboardPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionList) DeepCopyInto(out *DashboardPermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DashboardPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionList.
func (in *DashboardPermissionList) DeepCopy() *DashboardPermissionList {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardPermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionObservation) DeepCopyInto(out *DashboardPermissionObservation) {
	*out = *in
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionObservation.
func (in *DashboardPermissionObservation) DeepCopy() *DashboardPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionParameters) DeepCopyInto(out *DashboardPermissionParameters) {
	*out = *in
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionParameters.
func (in *DashboardPermissionParameters) DeepCopy() *DashboardPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionSpec) DeepCopyInto(out *DashboardPermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionSpec.
func (in *DashboardPermissionSpec) DeepCopy() *DashboardPermissionSpec {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPermissionStatus) DeepCopyInto(out *DashboardPermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPermissionStatus.
func (in *DashboardPermissionStatus) DeepCopy() *DashboardPermissionStatus {
	if in == nil {
		return nil
	}
	out := new(DashboardPermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublic) DeepCopyInto(out *DashboardPublic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublic.
func (in *DashboardPublic) DeepCopy() *DashboardPublic {
	if in == nil {
		return nil
	}
	out := new(DashboardPublic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardPublic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicInitParameters) DeepCopyInto(out *DashboardPublicInitParameters) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.AnnotationsEnabled != nil {
		in, out := &in.AnnotationsEnabled, &out.AnnotationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.TimeSelectionEnabled != nil {
		in, out := &in.TimeSelectionEnabled, &out.TimeSelectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicInitParameters.
func (in *DashboardPublicInitParameters) DeepCopy() *DashboardPublicInitParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicList) DeepCopyInto(out *DashboardPublicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DashboardPublic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicList.
func (in *DashboardPublicList) DeepCopy() *DashboardPublicList {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DashboardPublicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicObservation) DeepCopyInto(out *DashboardPublicObservation) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.AnnotationsEnabled != nil {
		in, out := &in.AnnotationsEnabled, &out.AnnotationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.TimeSelectionEnabled != nil {
		in, out := &in.TimeSelectionEnabled, &out.TimeSelectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicObservation.
func (in *DashboardPublicObservation) DeepCopy() *DashboardPublicObservation {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicParameters) DeepCopyInto(out *DashboardPublicParameters) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.AnnotationsEnabled != nil {
		in, out := &in.AnnotationsEnabled, &out.AnnotationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DashboardRef != nil {
		in, out := &in.DashboardRef, &out.DashboardRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardSelector != nil {
		in, out := &in.DashboardSelector, &out.DashboardSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DashboardUID != nil {
		in, out := &in.DashboardUID, &out.DashboardUID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Share != nil {
		in, out := &in.Share, &out.Share
		*out = new(string)
		**out = **in
	}
	if in.TimeSelectionEnabled != nil {
		in, out := &in.TimeSelectionEnabled, &out.TimeSelectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicParameters.
func (in *DashboardPublicParameters) DeepCopy() *DashboardPublicParameters {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicSpec) DeepCopyInto(out *DashboardPublicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicSpec.
func (in *DashboardPublicSpec) DeepCopy() *DashboardPublicSpec {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardPublicStatus) DeepCopyInto(out *DashboardPublicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardPublicStatus.
func (in *DashboardPublicStatus) DeepCopy() *DashboardPublicStatus {
	if in == nil {
		return nil
	}
	out := new(DashboardPublicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardSpec) DeepCopyInto(out *DashboardSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardSpec.
func (in *DashboardSpec) DeepCopy() *DashboardSpec {
	if in == nil {
		return nil
	}
	out := new(DashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardStatus) DeepCopyInto(out *DashboardStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardStatus.
func (in *DashboardStatus) DeepCopy() *DashboardStatus {
	if in == nil {
		return nil
	}
	out := new(DashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSource) DeepCopyInto(out *DataSource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSource.
func (in *DataSource) DeepCopy() *DataSource {
	if in == nil {
		return nil
	}
	out := new(DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceInitParameters) DeepCopyInto(out *DataSourceInitParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.BasicAuthEnabled != nil {
		in, out := &in.BasicAuthEnabled, &out.BasicAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BasicAuthUsername != nil {
		in, out := &in.BasicAuthUsername, &out.BasicAuthUsername
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.JSONDataEncoded != nil {
		in, out := &in.JSONDataEncoded, &out.JSONDataEncoded
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecureJSONDataEncodedSecretRef != nil {
		in, out := &in.SecureJSONDataEncodedSecretRef, &out.SecureJSONDataEncodedSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceInitParameters.
func (in *DataSourceInitParameters) DeepCopy() *DataSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceList) DeepCopyInto(out *DataSourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceList.
func (in *DataSourceList) DeepCopy() *DataSourceList {
	if in == nil {
		return nil
	}
	out := new(DataSourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceObservation) DeepCopyInto(out *DataSourceObservation) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.BasicAuthEnabled != nil {
		in, out := &in.BasicAuthEnabled, &out.BasicAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BasicAuthUsername != nil {
		in, out := &in.BasicAuthUsername, &out.BasicAuthUsername
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.JSONDataEncoded != nil {
		in, out := &in.JSONDataEncoded, &out.JSONDataEncoded
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceObservation.
func (in *DataSourceObservation) DeepCopy() *DataSourceObservation {
	if in == nil {
		return nil
	}
	out := new(DataSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceParameters) DeepCopyInto(out *DataSourceParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.BasicAuthEnabled != nil {
		in, out := &in.BasicAuthEnabled, &out.BasicAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BasicAuthUsername != nil {
		in, out := &in.BasicAuthUsername, &out.BasicAuthUsername
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeadersSecretRef != nil {
		in, out := &in.HTTPHeadersSecretRef, &out.HTTPHeadersSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.JSONDataEncoded != nil {
		in, out := &in.JSONDataEncoded, &out.JSONDataEncoded
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecureJSONDataEncodedSecretRef != nil {
		in, out := &in.SecureJSONDataEncodedSecretRef, &out.SecureJSONDataEncodedSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceParameters.
func (in *DataSourceParameters) DeepCopy() *DataSourceParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceSpec) DeepCopyInto(out *DataSourceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceSpec.
func (in *DataSourceSpec) DeepCopy() *DataSourceSpec {
	if in == nil {
		return nil
	}
	out := new(DataSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceStatus) DeepCopyInto(out *DataSourceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceStatus.
func (in *DataSourceStatus) DeepCopy() *DataSourceStatus {
	if in == nil {
		return nil
	}
	out := new(DataSourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Folder) DeepCopyInto(out *Folder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Folder.
func (in *Folder) DeepCopy() *Folder {
	if in == nil {
		return nil
	}
	out := new(Folder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Folder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderInitParameters) DeepCopyInto(out *FolderInitParameters) {
	*out = *in
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentFolderUID != nil {
		in, out := &in.ParentFolderUID, &out.ParentFolderUID
		*out = new(string)
		**out = **in
	}
	if in.PreventDestroyIfNotEmpty != nil {
		in, out := &in.PreventDestroyIfNotEmpty, &out.PreventDestroyIfNotEmpty
		*out = new(bool)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderInitParameters.
func (in *FolderInitParameters) DeepCopy() *FolderInitParameters {
	if in == nil {
		return nil
	}
	out := new(FolderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderList) DeepCopyInto(out *FolderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Folder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderList.
func (in *FolderList) DeepCopy() *FolderList {
	if in == nil {
		return nil
	}
	out := new(FolderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderObservation) DeepCopyInto(out *FolderObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ParentFolderUID != nil {
		in, out := &in.ParentFolderUID, &out.ParentFolderUID
		*out = new(string)
		**out = **in
	}
	if in.PreventDestroyIfNotEmpty != nil {
		in, out := &in.PreventDestroyIfNotEmpty, &out.PreventDestroyIfNotEmpty
		*out = new(bool)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderObservation.
func (in *FolderObservation) DeepCopy() *FolderObservation {
	if in == nil {
		return nil
	}
	out := new(FolderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderParameters) DeepCopyInto(out *FolderParameters) {
	*out = *in
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentFolderUID != nil {
		in, out := &in.ParentFolderUID, &out.ParentFolderUID
		*out = new(string)
		**out = **in
	}
	if in.PreventDestroyIfNotEmpty != nil {
		in, out := &in.PreventDestroyIfNotEmpty, &out.PreventDestroyIfNotEmpty
		*out = new(bool)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderParameters.
func (in *FolderParameters) DeepCopy() *FolderParameters {
	if in == nil {
		return nil
	}
	out := new(FolderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermission) DeepCopyInto(out *FolderPermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermission.
func (in *FolderPermission) DeepCopy() *FolderPermission {
	if in == nil {
		return nil
	}
	out := new(FolderPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderPermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionInitParameters) DeepCopyInto(out *FolderPermissionInitParameters) {
	*out = *in
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]FolderPermissionPermissionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionInitParameters.
func (in *FolderPermissionInitParameters) DeepCopy() *FolderPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionList) DeepCopyInto(out *FolderPermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FolderPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionList.
func (in *FolderPermissionList) DeepCopy() *FolderPermissionList {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderPermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionObservation) DeepCopyInto(out *FolderPermissionObservation) {
	*out = *in
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]FolderPermissionPermissionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionObservation.
func (in *FolderPermissionObservation) DeepCopy() *FolderPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionParameters) DeepCopyInto(out *FolderPermissionParameters) {
	*out = *in
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]FolderPermissionPermissionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionParameters.
func (in *FolderPermissionParameters) DeepCopy() *FolderPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionPermissionsInitParameters) DeepCopyInto(out *FolderPermissionPermissionsInitParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionPermissionsInitParameters.
func (in *FolderPermissionPermissionsInitParameters) DeepCopy() *FolderPermissionPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionPermissionsObservation) DeepCopyInto(out *FolderPermissionPermissionsObservation) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionPermissionsObservation.
func (in *FolderPermissionPermissionsObservation) DeepCopy() *FolderPermissionPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionPermissionsParameters) DeepCopyInto(out *FolderPermissionPermissionsParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionPermissionsParameters.
func (in *FolderPermissionPermissionsParameters) DeepCopy() *FolderPermissionPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionSpec) DeepCopyInto(out *FolderPermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionSpec.
func (in *FolderPermissionSpec) DeepCopy() *FolderPermissionSpec {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderPermissionStatus) DeepCopyInto(out *FolderPermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderPermissionStatus.
func (in *FolderPermissionStatus) DeepCopy() *FolderPermissionStatus {
	if in == nil {
		return nil
	}
	out := new(FolderPermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderSpec) DeepCopyInto(out *FolderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderSpec.
func (in *FolderSpec) DeepCopy() *FolderSpec {
	if in == nil {
		return nil
	}
	out := new(FolderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderStatus) DeepCopyInto(out *FolderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderStatus.
func (in *FolderStatus) DeepCopy() *FolderStatus {
	if in == nil {
		return nil
	}
	out := new(FolderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemInitParameters) DeepCopyInto(out *ItemInitParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemInitParameters.
func (in *ItemInitParameters) DeepCopy() *ItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(ItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemObservation) DeepCopyInto(out *ItemObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemObservation.
func (in *ItemObservation) DeepCopy() *ItemObservation {
	if in == nil {
		return nil
	}
	out := new(ItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemParameters) DeepCopyInto(out *ItemParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemParameters.
func (in *ItemParameters) DeepCopy() *ItemParameters {
	if in == nil {
		return nil
	}
	out := new(ItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanel) DeepCopyInto(out *LibraryPanel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanel.
func (in *LibraryPanel) DeepCopy() *LibraryPanel {
	if in == nil {
		return nil
	}
	out := new(LibraryPanel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibraryPanel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelInitParameters) DeepCopyInto(out *LibraryPanelInitParameters) {
	*out = *in
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.ModelJSON != nil {
		in, out := &in.ModelJSON, &out.ModelJSON
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelInitParameters.
func (in *LibraryPanelInitParameters) DeepCopy() *LibraryPanelInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelList) DeepCopyInto(out *LibraryPanelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LibraryPanel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelList.
func (in *LibraryPanelList) DeepCopy() *LibraryPanelList {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibraryPanelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelObservation) DeepCopyInto(out *LibraryPanelObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.DashboardIds != nil {
		in, out := &in.DashboardIds, &out.DashboardIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderName != nil {
		in, out := &in.FolderName, &out.FolderName
		*out = new(string)
		**out = **in
	}
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModelJSON != nil {
		in, out := &in.ModelJSON, &out.ModelJSON
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PanelID != nil {
		in, out := &in.PanelID, &out.PanelID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Updated != nil {
		in, out := &in.Updated, &out.Updated
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelObservation.
func (in *LibraryPanelObservation) DeepCopy() *LibraryPanelObservation {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelParameters) DeepCopyInto(out *LibraryPanelParameters) {
	*out = *in
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderSelector != nil {
		in, out := &in.FolderSelector, &out.FolderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderUID != nil {
		in, out := &in.FolderUID, &out.FolderUID
		*out = new(string)
		**out = **in
	}
	if in.ModelJSON != nil {
		in, out := &in.ModelJSON, &out.ModelJSON
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelParameters.
func (in *LibraryPanelParameters) DeepCopy() *LibraryPanelParameters {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelSpec) DeepCopyInto(out *LibraryPanelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelSpec.
func (in *LibraryPanelSpec) DeepCopy() *LibraryPanelSpec {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibraryPanelStatus) DeepCopyInto(out *LibraryPanelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibraryPanelStatus.
func (in *LibraryPanelStatus) DeepCopy() *LibraryPanelStatus {
	if in == nil {
		return nil
	}
	out := new(LibraryPanelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2SettingsInitParameters) DeepCopyInto(out *Oauth2SettingsInitParameters) {
	*out = *in
	if in.APIURL != nil {
		in, out := &in.APIURL, &out.APIURL
		*out = new(string)
		**out = **in
	}
	if in.AllowAssignGrafanaAdmin != nil {
		in, out := &in.AllowAssignGrafanaAdmin, &out.AllowAssignGrafanaAdmin
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedDomains != nil {
		in, out := &in.AllowedDomains, &out.AllowedDomains
		*out = new(string)
		**out = **in
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = new(string)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AuthStyle != nil {
		in, out := &in.AuthStyle, &out.AuthStyle
		*out = new(string)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefineAllowedGroups != nil {
		in, out := &in.DefineAllowedGroups, &out.DefineAllowedGroups
		*out = new(bool)
		**out = **in
	}
	if in.DefineAllowedTeamsIds != nil {
		in, out := &in.DefineAllowedTeamsIds, &out.DefineAllowedTeamsIds
		*out = new(bool)
		**out = **in
	}
	if in.EmailAttributeName != nil {
		in, out := &in.EmailAttributeName, &out.EmailAttributeName
		*out = new(string)
		**out = **in
	}
	if in.EmailAttributePath != nil {
		in, out := &in.EmailAttributePath, &out.EmailAttributePath
		*out = new(string)
		**out = **in
	}
	if in.EmptyScopes != nil {
		in, out := &in.EmptyScopes, &out.EmptyScopes
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupsAttributePath != nil {
		in, out := &in.GroupsAttributePath, &out.GroupsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.IDTokenAttributeName != nil {
		in, out := &in.IDTokenAttributeName, &out.IDTokenAttributeName
		*out = new(string)
		**out = **in
	}
	if in.LoginAttributePath != nil {
		in, out := &in.LoginAttributePath, &out.LoginAttributePath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameAttributePath != nil {
		in, out := &in.NameAttributePath, &out.NameAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributePath != nil {
		in, out := &in.RoleAttributePath, &out.RoleAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributeStrict != nil {
		in, out := &in.RoleAttributeStrict, &out.RoleAttributeStrict
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = new(string)
		**out = **in
	}
	if in.SignoutRedirectURL != nil {
		in, out := &in.SignoutRedirectURL, &out.SignoutRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
	if in.TLSClientCA != nil {
		in, out := &in.TLSClientCA, &out.TLSClientCA
		*out = new(string)
		**out = **in
	}
	if in.TLSClientCert != nil {
		in, out := &in.TLSClientCert, &out.TLSClientCert
		*out = new(string)
		**out = **in
	}
	if in.TLSClientKey != nil {
		in, out := &in.TLSClientKey, &out.TLSClientKey
		*out = new(string)
		**out = **in
	}
	if in.TLSSkipVerifyInsecure != nil {
		in, out := &in.TLSSkipVerifyInsecure, &out.TLSSkipVerifyInsecure
		*out = new(bool)
		**out = **in
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = new(string)
		**out = **in
	}
	if in.TeamIdsAttributePath != nil {
		in, out := &in.TeamIdsAttributePath, &out.TeamIdsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.TeamsURL != nil {
		in, out := &in.TeamsURL, &out.TeamsURL
		*out = new(string)
		**out = **in
	}
	if in.TokenURL != nil {
		in, out := &in.TokenURL, &out.TokenURL
		*out = new(string)
		**out = **in
	}
	if in.UsePkce != nil {
		in, out := &in.UsePkce, &out.UsePkce
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshToken != nil {
		in, out := &in.UseRefreshToken, &out.UseRefreshToken
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2SettingsInitParameters.
func (in *Oauth2SettingsInitParameters) DeepCopy() *Oauth2SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Oauth2SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2SettingsObservation) DeepCopyInto(out *Oauth2SettingsObservation) {
	*out = *in
	if in.APIURL != nil {
		in, out := &in.APIURL, &out.APIURL
		*out = new(string)
		**out = **in
	}
	if in.AllowAssignGrafanaAdmin != nil {
		in, out := &in.AllowAssignGrafanaAdmin, &out.AllowAssignGrafanaAdmin
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedDomains != nil {
		in, out := &in.AllowedDomains, &out.AllowedDomains
		*out = new(string)
		**out = **in
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = new(string)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AuthStyle != nil {
		in, out := &in.AuthStyle, &out.AuthStyle
		*out = new(string)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefineAllowedGroups != nil {
		in, out := &in.DefineAllowedGroups, &out.DefineAllowedGroups
		*out = new(bool)
		**out = **in
	}
	if in.DefineAllowedTeamsIds != nil {
		in, out := &in.DefineAllowedTeamsIds, &out.DefineAllowedTeamsIds
		*out = new(bool)
		**out = **in
	}
	if in.EmailAttributeName != nil {
		in, out := &in.EmailAttributeName, &out.EmailAttributeName
		*out = new(string)
		**out = **in
	}
	if in.EmailAttributePath != nil {
		in, out := &in.EmailAttributePath, &out.EmailAttributePath
		*out = new(string)
		**out = **in
	}
	if in.EmptyScopes != nil {
		in, out := &in.EmptyScopes, &out.EmptyScopes
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupsAttributePath != nil {
		in, out := &in.GroupsAttributePath, &out.GroupsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.IDTokenAttributeName != nil {
		in, out := &in.IDTokenAttributeName, &out.IDTokenAttributeName
		*out = new(string)
		**out = **in
	}
	if in.LoginAttributePath != nil {
		in, out := &in.LoginAttributePath, &out.LoginAttributePath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameAttributePath != nil {
		in, out := &in.NameAttributePath, &out.NameAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributePath != nil {
		in, out := &in.RoleAttributePath, &out.RoleAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributeStrict != nil {
		in, out := &in.RoleAttributeStrict, &out.RoleAttributeStrict
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = new(string)
		**out = **in
	}
	if in.SignoutRedirectURL != nil {
		in, out := &in.SignoutRedirectURL, &out.SignoutRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
	if in.TLSClientCA != nil {
		in, out := &in.TLSClientCA, &out.TLSClientCA
		*out = new(string)
		**out = **in
	}
	if in.TLSClientCert != nil {
		in, out := &in.TLSClientCert, &out.TLSClientCert
		*out = new(string)
		**out = **in
	}
	if in.TLSClientKey != nil {
		in, out := &in.TLSClientKey, &out.TLSClientKey
		*out = new(string)
		**out = **in
	}
	if in.TLSSkipVerifyInsecure != nil {
		in, out := &in.TLSSkipVerifyInsecure, &out.TLSSkipVerifyInsecure
		*out = new(bool)
		**out = **in
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = new(string)
		**out = **in
	}
	if in.TeamIdsAttributePath != nil {
		in, out := &in.TeamIdsAttributePath, &out.TeamIdsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.TeamsURL != nil {
		in, out := &in.TeamsURL, &out.TeamsURL
		*out = new(string)
		**out = **in
	}
	if in.TokenURL != nil {
		in, out := &in.TokenURL, &out.TokenURL
		*out = new(string)
		**out = **in
	}
	if in.UsePkce != nil {
		in, out := &in.UsePkce, &out.UsePkce
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshToken != nil {
		in, out := &in.UseRefreshToken, &out.UseRefreshToken
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2SettingsObservation.
func (in *Oauth2SettingsObservation) DeepCopy() *Oauth2SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(Oauth2SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth2SettingsParameters) DeepCopyInto(out *Oauth2SettingsParameters) {
	*out = *in
	if in.APIURL != nil {
		in, out := &in.APIURL, &out.APIURL
		*out = new(string)
		**out = **in
	}
	if in.AllowAssignGrafanaAdmin != nil {
		in, out := &in.AllowAssignGrafanaAdmin, &out.AllowAssignGrafanaAdmin
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedDomains != nil {
		in, out := &in.AllowedDomains, &out.AllowedDomains
		*out = new(string)
		**out = **in
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = new(string)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AuthStyle != nil {
		in, out := &in.AuthStyle, &out.AuthStyle
		*out = new(string)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefineAllowedGroups != nil {
		in, out := &in.DefineAllowedGroups, &out.DefineAllowedGroups
		*out = new(bool)
		**out = **in
	}
	if in.DefineAllowedTeamsIds != nil {
		in, out := &in.DefineAllowedTeamsIds, &out.DefineAllowedTeamsIds
		*out = new(bool)
		**out = **in
	}
	if in.EmailAttributeName != nil {
		in, out := &in.EmailAttributeName, &out.EmailAttributeName
		*out = new(string)
		**out = **in
	}
	if in.EmailAttributePath != nil {
		in, out := &in.EmailAttributePath, &out.EmailAttributePath
		*out = new(string)
		**out = **in
	}
	if in.EmptyScopes != nil {
		in, out := &in.EmptyScopes, &out.EmptyScopes
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupsAttributePath != nil {
		in, out := &in.GroupsAttributePath, &out.GroupsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.IDTokenAttributeName != nil {
		in, out := &in.IDTokenAttributeName, &out.IDTokenAttributeName
		*out = new(string)
		**out = **in
	}
	if in.LoginAttributePath != nil {
		in, out := &in.LoginAttributePath, &out.LoginAttributePath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameAttributePath != nil {
		in, out := &in.NameAttributePath, &out.NameAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributePath != nil {
		in, out := &in.RoleAttributePath, &out.RoleAttributePath
		*out = new(string)
		**out = **in
	}
	if in.RoleAttributeStrict != nil {
		in, out := &in.RoleAttributeStrict, &out.RoleAttributeStrict
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = new(string)
		**out = **in
	}
	if in.SignoutRedirectURL != nil {
		in, out := &in.SignoutRedirectURL, &out.SignoutRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
	if in.TLSClientCA != nil {
		in, out := &in.TLSClientCA, &out.TLSClientCA
		*out = new(string)
		**out = **in
	}
	if in.TLSClientCert != nil {
		in, out := &in.TLSClientCert, &out.TLSClientCert
		*out = new(string)
		**out = **in
	}
	if in.TLSClientKey != nil {
		in, out := &in.TLSClientKey, &out.TLSClientKey
		*out = new(string)
		**out = **in
	}
	if in.TLSSkipVerifyInsecure != nil {
		in, out := &in.TLSSkipVerifyInsecure, &out.TLSSkipVerifyInsecure
		*out = new(bool)
		**out = **in
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = new(string)
		**out = **in
	}
	if in.TeamIdsAttributePath != nil {
		in, out := &in.TeamIdsAttributePath, &out.TeamIdsAttributePath
		*out = new(string)
		**out = **in
	}
	if in.TeamsURL != nil {
		in, out := &in.TeamsURL, &out.TeamsURL
		*out = new(string)
		**out = **in
	}
	if in.TokenURL != nil {
		in, out := &in.TokenURL, &out.TokenURL
		*out = new(string)
		**out = **in
	}
	if in.UsePkce != nil {
		in, out := &in.UsePkce, &out.UsePkce
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshToken != nil {
		in, out := &in.UseRefreshToken, &out.UseRefreshToken
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth2SettingsParameters.
func (in *Oauth2SettingsParameters) DeepCopy() *Oauth2SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(Oauth2SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Organization) DeepCopyInto(out *Organization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Organization.
func (in *Organization) DeepCopy() *Organization {
	if in == nil {
		return nil
	}
	out := new(Organization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Organization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationInitParameters) DeepCopyInto(out *OrganizationInitParameters) {
	*out = *in
	if in.AdminUser != nil {
		in, out := &in.AdminUser, &out.AdminUser
		*out = new(string)
		**out = **in
	}
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreateUsers != nil {
		in, out := &in.CreateUsers, &out.CreateUsers
		*out = new(bool)
		**out = **in
	}
	if in.Editors != nil {
		in, out := &in.Editors, &out.Editors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UsersWithoutAccess != nil {
		in, out := &in.UsersWithoutAccess, &out.UsersWithoutAccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationInitParameters.
func (in *OrganizationInitParameters) DeepCopy() *OrganizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationList) DeepCopyInto(out *OrganizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Organization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationList.
func (in *OrganizationList) DeepCopy() *OrganizationList {
	if in == nil {
		return nil
	}
	out := new(OrganizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationObservation) DeepCopyInto(out *OrganizationObservation) {
	*out = *in
	if in.AdminUser != nil {
		in, out := &in.AdminUser, &out.AdminUser
		*out = new(string)
		**out = **in
	}
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreateUsers != nil {
		in, out := &in.CreateUsers, &out.CreateUsers
		*out = new(bool)
		**out = **in
	}
	if in.Editors != nil {
		in, out := &in.Editors, &out.Editors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(float64)
		**out = **in
	}
	if in.UsersWithoutAccess != nil {
		in, out := &in.UsersWithoutAccess, &out.UsersWithoutAccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationObservation.
func (in *OrganizationObservation) DeepCopy() *OrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationParameters) DeepCopyInto(out *OrganizationParameters) {
	*out = *in
	if in.AdminUser != nil {
		in, out := &in.AdminUser, &out.AdminUser
		*out = new(string)
		**out = **in
	}
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreateUsers != nil {
		in, out := &in.CreateUsers, &out.CreateUsers
		*out = new(bool)
		**out = **in
	}
	if in.Editors != nil {
		in, out := &in.Editors, &out.Editors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UsersWithoutAccess != nil {
		in, out := &in.UsersWithoutAccess, &out.UsersWithoutAccess
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationParameters.
func (in *OrganizationParameters) DeepCopy() *OrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferences) DeepCopyInto(out *OrganizationPreferences) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferences.
func (in *OrganizationPreferences) DeepCopy() *OrganizationPreferences {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationPreferences) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesInitParameters) DeepCopyInto(out *OrganizationPreferencesInitParameters) {
	*out = *in
	if in.HomeDashboardID != nil {
		in, out := &in.HomeDashboardID, &out.HomeDashboardID
		*out = new(float64)
		**out = **in
	}
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesInitParameters.
func (in *OrganizationPreferencesInitParameters) DeepCopy() *OrganizationPreferencesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesList) DeepCopyInto(out *OrganizationPreferencesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationPreferences, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesList.
func (in *OrganizationPreferencesList) DeepCopy() *OrganizationPreferencesList {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationPreferencesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesObservation) DeepCopyInto(out *OrganizationPreferencesObservation) {
	*out = *in
	if in.HomeDashboardID != nil {
		in, out := &in.HomeDashboardID, &out.HomeDashboardID
		*out = new(float64)
		**out = **in
	}
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesObservation.
func (in *OrganizationPreferencesObservation) DeepCopy() *OrganizationPreferencesObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesParameters) DeepCopyInto(out *OrganizationPreferencesParameters) {
	*out = *in
	if in.HomeDashboardID != nil {
		in, out := &in.HomeDashboardID, &out.HomeDashboardID
		*out = new(float64)
		**out = **in
	}
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesParameters.
func (in *OrganizationPreferencesParameters) DeepCopy() *OrganizationPreferencesParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesSpec) DeepCopyInto(out *OrganizationPreferencesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesSpec.
func (in *OrganizationPreferencesSpec) DeepCopy() *OrganizationPreferencesSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPreferencesStatus) DeepCopyInto(out *OrganizationPreferencesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPreferencesStatus.
func (in *OrganizationPreferencesStatus) DeepCopy() *OrganizationPreferencesStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationPreferencesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationSpec) DeepCopyInto(out *OrganizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationSpec.
func (in *OrganizationSpec) DeepCopy() *OrganizationSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationStatus) DeepCopyInto(out *OrganizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationStatus.
func (in *OrganizationStatus) DeepCopy() *OrganizationStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsInitParameters) DeepCopyInto(out *PermissionsInitParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsInitParameters.
func (in *PermissionsInitParameters) DeepCopy() *PermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsObservation) DeepCopyInto(out *PermissionsObservation) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsObservation.
func (in *PermissionsObservation) DeepCopy() *PermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsParameters) DeepCopyInto(out *PermissionsParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsParameters.
func (in *PermissionsParameters) DeepCopy() *PermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Playlist) DeepCopyInto(out *Playlist) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Playlist.
func (in *Playlist) DeepCopy() *Playlist {
	if in == nil {
		return nil
	}
	out := new(Playlist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Playlist) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistInitParameters) DeepCopyInto(out *PlaylistInitParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistInitParameters.
func (in *PlaylistInitParameters) DeepCopy() *PlaylistInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlaylistInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistList) DeepCopyInto(out *PlaylistList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Playlist, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistList.
func (in *PlaylistList) DeepCopy() *PlaylistList {
	if in == nil {
		return nil
	}
	out := new(PlaylistList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlaylistList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistObservation) DeepCopyInto(out *PlaylistObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistObservation.
func (in *PlaylistObservation) DeepCopy() *PlaylistObservation {
	if in == nil {
		return nil
	}
	out := new(PlaylistObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistParameters) DeepCopyInto(out *PlaylistParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistParameters.
func (in *PlaylistParameters) DeepCopy() *PlaylistParameters {
	if in == nil {
		return nil
	}
	out := new(PlaylistParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistSpec) DeepCopyInto(out *PlaylistSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistSpec.
func (in *PlaylistSpec) DeepCopy() *PlaylistSpec {
	if in == nil {
		return nil
	}
	out := new(PlaylistSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaylistStatus) DeepCopyInto(out *PlaylistStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaylistStatus.
func (in *PlaylistStatus) DeepCopy() *PlaylistStatus {
	if in == nil {
		return nil
	}
	out := new(PlaylistStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesInitParameters) DeepCopyInto(out *PreferencesInitParameters) {
	*out = *in
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesInitParameters.
func (in *PreferencesInitParameters) DeepCopy() *PreferencesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreferencesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesObservation) DeepCopyInto(out *PreferencesObservation) {
	*out = *in
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesObservation.
func (in *PreferencesObservation) DeepCopy() *PreferencesObservation {
	if in == nil {
		return nil
	}
	out := new(PreferencesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesParameters) DeepCopyInto(out *PreferencesParameters) {
	*out = *in
	if in.HomeDashboardUID != nil {
		in, out := &in.HomeDashboardUID, &out.HomeDashboardUID
		*out = new(string)
		**out = **in
	}
	if in.Theme != nil {
		in, out := &in.Theme, &out.Theme
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesParameters.
func (in *PreferencesParameters) DeepCopy() *PreferencesParameters {
	if in == nil {
		return nil
	}
	out := new(PreferencesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSettingsInitParameters) DeepCopyInto(out *SAMLSettingsInitParameters) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeEmail != nil {
		in, out := &in.AssertionAttributeEmail, &out.AssertionAttributeEmail
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeGroups != nil {
		in, out := &in.AssertionAttributeGroups, &out.AssertionAttributeGroups
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeLogin != nil {
		in, out := &in.AssertionAttributeLogin, &out.AssertionAttributeLogin
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeName != nil {
		in, out := &in.AssertionAttributeName, &out.AssertionAttributeName
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeOrg != nil {
		in, out := &in.AssertionAttributeOrg, &out.AssertionAttributeOrg
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeRole != nil {
		in, out := &in.AssertionAttributeRole, &out.AssertionAttributeRole
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.CertificatePath != nil {
		in, out := &in.CertificatePath, &out.CertificatePath
		*out = new(string)
		**out = **in
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdpMetadata != nil {
		in, out := &in.IdpMetadata, &out.IdpMetadata
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataPath != nil {
		in, out := &in.IdpMetadataPath, &out.IdpMetadataPath
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataURL != nil {
		in, out := &in.IdpMetadataURL, &out.IdpMetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MaxIssueDelay != nil {
		in, out := &in.MaxIssueDelay, &out.MaxIssueDelay
		*out = new(string)
		**out = **in
	}
	if in.MetadataValidDuration != nil {
		in, out := &in.MetadataValidDuration, &out.MetadataValidDuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDFormat != nil {
		in, out := &in.NameIDFormat, &out.NameIDFormat
		*out = new(string)
		**out = **in
	}
	if in.OrgMapping != nil {
		in, out := &in.OrgMapping, &out.OrgMapping
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPath != nil {
		in, out := &in.PrivateKeyPath, &out.PrivateKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RelayState != nil {
		in, out := &in.RelayState, &out.RelayState
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesAdmin != nil {
		in, out := &in.RoleValuesAdmin, &out.RoleValuesAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesEditor != nil {
		in, out := &in.RoleValuesEditor, &out.RoleValuesEditor
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesGrafanaAdmin != nil {
		in, out := &in.RoleValuesGrafanaAdmin, &out.RoleValuesGrafanaAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesNone != nil {
		in, out := &in.RoleValuesNone, &out.RoleValuesNone
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SingleLogout != nil {
		in, out := &in.SingleLogout, &out.SingleLogout
		*out = new(bool)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSettingsInitParameters.
func (in *SAMLSettingsInitParameters) DeepCopy() *SAMLSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSettingsObservation) DeepCopyInto(out *SAMLSettingsObservation) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeEmail != nil {
		in, out := &in.AssertionAttributeEmail, &out.AssertionAttributeEmail
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeGroups != nil {
		in, out := &in.AssertionAttributeGroups, &out.AssertionAttributeGroups
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeLogin != nil {
		in, out := &in.AssertionAttributeLogin, &out.AssertionAttributeLogin
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeName != nil {
		in, out := &in.AssertionAttributeName, &out.AssertionAttributeName
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeOrg != nil {
		in, out := &in.AssertionAttributeOrg, &out.AssertionAttributeOrg
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeRole != nil {
		in, out := &in.AssertionAttributeRole, &out.AssertionAttributeRole
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.CertificatePath != nil {
		in, out := &in.CertificatePath, &out.CertificatePath
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdpMetadata != nil {
		in, out := &in.IdpMetadata, &out.IdpMetadata
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataPath != nil {
		in, out := &in.IdpMetadataPath, &out.IdpMetadataPath
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataURL != nil {
		in, out := &in.IdpMetadataURL, &out.IdpMetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MaxIssueDelay != nil {
		in, out := &in.MaxIssueDelay, &out.MaxIssueDelay
		*out = new(string)
		**out = **in
	}
	if in.MetadataValidDuration != nil {
		in, out := &in.MetadataValidDuration, &out.MetadataValidDuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDFormat != nil {
		in, out := &in.NameIDFormat, &out.NameIDFormat
		*out = new(string)
		**out = **in
	}
	if in.OrgMapping != nil {
		in, out := &in.OrgMapping, &out.OrgMapping
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPath != nil {
		in, out := &in.PrivateKeyPath, &out.PrivateKeyPath
		*out = new(string)
		**out = **in
	}
	if in.RelayState != nil {
		in, out := &in.RelayState, &out.RelayState
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesAdmin != nil {
		in, out := &in.RoleValuesAdmin, &out.RoleValuesAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesEditor != nil {
		in, out := &in.RoleValuesEditor, &out.RoleValuesEditor
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesGrafanaAdmin != nil {
		in, out := &in.RoleValuesGrafanaAdmin, &out.RoleValuesGrafanaAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesNone != nil {
		in, out := &in.RoleValuesNone, &out.RoleValuesNone
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SingleLogout != nil {
		in, out := &in.SingleLogout, &out.SingleLogout
		*out = new(bool)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSettingsObservation.
func (in *SAMLSettingsObservation) DeepCopy() *SAMLSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSettingsParameters) DeepCopyInto(out *SAMLSettingsParameters) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.AllowSignUp != nil {
		in, out := &in.AllowSignUp, &out.AllowSignUp
		*out = new(bool)
		**out = **in
	}
	if in.AllowedOrganizations != nil {
		in, out := &in.AllowedOrganizations, &out.AllowedOrganizations
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeEmail != nil {
		in, out := &in.AssertionAttributeEmail, &out.AssertionAttributeEmail
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeGroups != nil {
		in, out := &in.AssertionAttributeGroups, &out.AssertionAttributeGroups
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeLogin != nil {
		in, out := &in.AssertionAttributeLogin, &out.AssertionAttributeLogin
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeName != nil {
		in, out := &in.AssertionAttributeName, &out.AssertionAttributeName
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeOrg != nil {
		in, out := &in.AssertionAttributeOrg, &out.AssertionAttributeOrg
		*out = new(string)
		**out = **in
	}
	if in.AssertionAttributeRole != nil {
		in, out := &in.AssertionAttributeRole, &out.AssertionAttributeRole
		*out = new(string)
		**out = **in
	}
	if in.AutoLogin != nil {
		in, out := &in.AutoLogin, &out.AutoLogin
		*out = new(bool)
		**out = **in
	}
	if in.CertificatePath != nil {
		in, out := &in.CertificatePath, &out.CertificatePath
		*out = new(string)
		**out = **in
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdpMetadata != nil {
		in, out := &in.IdpMetadata, &out.IdpMetadata
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataPath != nil {
		in, out := &in.IdpMetadataPath, &out.IdpMetadataPath
		*out = new(string)
		**out = **in
	}
	if in.IdpMetadataURL != nil {
		in, out := &in.IdpMetadataURL, &out.IdpMetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MaxIssueDelay != nil {
		in, out := &in.MaxIssueDelay, &out.MaxIssueDelay
		*out = new(string)
		**out = **in
	}
	if in.MetadataValidDuration != nil {
		in, out := &in.MetadataValidDuration, &out.MetadataValidDuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDFormat != nil {
		in, out := &in.NameIDFormat, &out.NameIDFormat
		*out = new(string)
		**out = **in
	}
	if in.OrgMapping != nil {
		in, out := &in.OrgMapping, &out.OrgMapping
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeyPath != nil {
		in, out := &in.PrivateKeyPath, &out.PrivateKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RelayState != nil {
		in, out := &in.RelayState, &out.RelayState
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesAdmin != nil {
		in, out := &in.RoleValuesAdmin, &out.RoleValuesAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesEditor != nil {
		in, out := &in.RoleValuesEditor, &out.RoleValuesEditor
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesGrafanaAdmin != nil {
		in, out := &in.RoleValuesGrafanaAdmin, &out.RoleValuesGrafanaAdmin
		*out = new(string)
		**out = **in
	}
	if in.RoleValuesNone != nil {
		in, out := &in.RoleValuesNone, &out.RoleValuesNone
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SingleLogout != nil {
		in, out := &in.SingleLogout, &out.SingleLogout
		*out = new(bool)
		**out = **in
	}
	if in.SkipOrgRoleSync != nil {
		in, out := &in.SkipOrgRoleSync, &out.SkipOrgRoleSync
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSettingsParameters.
func (in *SAMLSettingsParameters) DeepCopy() *SAMLSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccount) DeepCopyInto(out *ServiceAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccount.
func (in *ServiceAccount) DeepCopy() *ServiceAccount {
	if in == nil {
		return nil
	}
	out := new(ServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountInitParameters) DeepCopyInto(out *ServiceAccountInitParameters) {
	*out = *in
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountInitParameters.
func (in *ServiceAccountInitParameters) DeepCopy() *ServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountList) DeepCopyInto(out *ServiceAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountList.
func (in *ServiceAccountList) DeepCopy() *ServiceAccountList {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountObservation) DeepCopyInto(out *ServiceAccountObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountObservation.
func (in *ServiceAccountObservation) DeepCopy() *ServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountParameters) DeepCopyInto(out *ServiceAccountParameters) {
	*out = *in
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountParameters.
func (in *ServiceAccountParameters) DeepCopy() *ServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermission) DeepCopyInto(out *ServiceAccountPermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermission.
func (in *ServiceAccountPermission) DeepCopy() *ServiceAccountPermission {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountPermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionInitParameters) DeepCopyInto(out *ServiceAccountPermissionInitParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]ServiceAccountPermissionPermissionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionInitParameters.
func (in *ServiceAccountPermissionInitParameters) DeepCopy() *ServiceAccountPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionList) DeepCopyInto(out *ServiceAccountPermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAccountPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionList.
func (in *ServiceAccountPermissionList) DeepCopy() *ServiceAccountPermissionList {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountPermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionObservation) DeepCopyInto(out *ServiceAccountPermissionObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]ServiceAccountPermissionPermissionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionObservation.
func (in *ServiceAccountPermissionObservation) DeepCopy() *ServiceAccountPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionParameters) DeepCopyInto(out *ServiceAccountPermissionParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]ServiceAccountPermissionPermissionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionParameters.
func (in *ServiceAccountPermissionParameters) DeepCopy() *ServiceAccountPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionPermissionsInitParameters) DeepCopyInto(out *ServiceAccountPermissionPermissionsInitParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionPermissionsInitParameters.
func (in *ServiceAccountPermissionPermissionsInitParameters) DeepCopy() *ServiceAccountPermissionPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionPermissionsObservation) DeepCopyInto(out *ServiceAccountPermissionPermissionsObservation) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionPermissionsObservation.
func (in *ServiceAccountPermissionPermissionsObservation) DeepCopy() *ServiceAccountPermissionPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionPermissionsParameters) DeepCopyInto(out *ServiceAccountPermissionPermissionsParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.TeamRef != nil {
		in, out := &in.TeamRef, &out.TeamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TeamSelector != nil {
		in, out := &in.TeamSelector, &out.TeamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionPermissionsParameters.
func (in *ServiceAccountPermissionPermissionsParameters) DeepCopy() *ServiceAccountPermissionPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionSpec) DeepCopyInto(out *ServiceAccountPermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionSpec.
func (in *ServiceAccountPermissionSpec) DeepCopy() *ServiceAccountPermissionSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountPermissionStatus) DeepCopyInto(out *ServiceAccountPermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountPermissionStatus.
func (in *ServiceAccountPermissionStatus) DeepCopy() *ServiceAccountPermissionStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountPermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountSpec) DeepCopyInto(out *ServiceAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountSpec.
func (in *ServiceAccountSpec) DeepCopy() *ServiceAccountSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountStatus) DeepCopyInto(out *ServiceAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountStatus.
func (in *ServiceAccountStatus) DeepCopy() *ServiceAccountStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountToken) DeepCopyInto(out *ServiceAccountToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountToken.
func (in *ServiceAccountToken) DeepCopy() *ServiceAccountToken {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenInitParameters) DeepCopyInto(out *ServiceAccountTokenInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenInitParameters.
func (in *ServiceAccountTokenInitParameters) DeepCopy() *ServiceAccountTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenList) DeepCopyInto(out *ServiceAccountTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAccountToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenList.
func (in *ServiceAccountTokenList) DeepCopy() *ServiceAccountTokenList {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenObservation) DeepCopyInto(out *ServiceAccountTokenObservation) {
	*out = *in
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.HasExpired != nil {
		in, out := &in.HasExpired, &out.HasExpired
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenObservation.
func (in *ServiceAccountTokenObservation) DeepCopy() *ServiceAccountTokenObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenParameters) DeepCopyInto(out *ServiceAccountTokenParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecondsToLive != nil {
		in, out := &in.SecondsToLive, &out.SecondsToLive
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenParameters.
func (in *ServiceAccountTokenParameters) DeepCopy() *ServiceAccountTokenParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenSpec) DeepCopyInto(out *ServiceAccountTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenSpec.
func (in *ServiceAccountTokenSpec) DeepCopy() *ServiceAccountTokenSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountTokenStatus) DeepCopyInto(out *ServiceAccountTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountTokenStatus.
func (in *ServiceAccountTokenStatus) DeepCopy() *ServiceAccountTokenStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettings) DeepCopyInto(out *SsoSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettings.
func (in *SsoSettings) DeepCopy() *SsoSettings {
	if in == nil {
		return nil
	}
	out := new(SsoSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SsoSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsInitParameters) DeepCopyInto(out *SsoSettingsInitParameters) {
	*out = *in
	if in.Oauth2Settings != nil {
		in, out := &in.Oauth2Settings, &out.Oauth2Settings
		*out = make([]Oauth2SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SAMLSettings != nil {
		in, out := &in.SAMLSettings, &out.SAMLSettings
		*out = make([]SAMLSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsInitParameters.
func (in *SsoSettingsInitParameters) DeepCopy() *SsoSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsList) DeepCopyInto(out *SsoSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SsoSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsList.
func (in *SsoSettingsList) DeepCopy() *SsoSettingsList {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SsoSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsObservation) DeepCopyInto(out *SsoSettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Oauth2Settings != nil {
		in, out := &in.Oauth2Settings, &out.Oauth2Settings
		*out = make([]Oauth2SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SAMLSettings != nil {
		in, out := &in.SAMLSettings, &out.SAMLSettings
		*out = make([]SAMLSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsObservation.
func (in *SsoSettingsObservation) DeepCopy() *SsoSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsParameters) DeepCopyInto(out *SsoSettingsParameters) {
	*out = *in
	if in.Oauth2Settings != nil {
		in, out := &in.Oauth2Settings, &out.Oauth2Settings
		*out = make([]Oauth2SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SAMLSettings != nil {
		in, out := &in.SAMLSettings, &out.SAMLSettings
		*out = make([]SAMLSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsParameters.
func (in *SsoSettingsParameters) DeepCopy() *SsoSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsSpec) DeepCopyInto(out *SsoSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsSpec.
func (in *SsoSettingsSpec) DeepCopy() *SsoSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoSettingsStatus) DeepCopyInto(out *SsoSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoSettingsStatus.
func (in *SsoSettingsStatus) DeepCopy() *SsoSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(SsoSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamInitParameters) DeepCopyInto(out *TeamInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IgnoreExternallySyncedMembers != nil {
		in, out := &in.IgnoreExternallySyncedMembers, &out.IgnoreExternallySyncedMembers
		*out = new(bool)
		**out = **in
	}
	if in.MemberRefs != nil {
		in, out := &in.MemberRefs, &out.MemberRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberSelector != nil {
		in, out := &in.MemberSelector, &out.MemberSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamSync != nil {
		in, out := &in.TeamSync, &out.TeamSync
		*out = make([]TeamSyncInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamInitParameters.
func (in *TeamInitParameters) DeepCopy() *TeamInitParameters {
	if in == nil {
		return nil
	}
	out := new(TeamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamObservation) DeepCopyInto(out *TeamObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreExternallySyncedMembers != nil {
		in, out := &in.IgnoreExternallySyncedMembers, &out.IgnoreExternallySyncedMembers
		*out = new(bool)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(float64)
		**out = **in
	}
	if in.TeamSync != nil {
		in, out := &in.TeamSync, &out.TeamSync
		*out = make([]TeamSyncObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamObservation.
func (in *TeamObservation) DeepCopy() *TeamObservation {
	if in == nil {
		return nil
	}
	out := new(TeamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamParameters) DeepCopyInto(out *TeamParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IgnoreExternallySyncedMembers != nil {
		in, out := &in.IgnoreExternallySyncedMembers, &out.IgnoreExternallySyncedMembers
		*out = new(bool)
		**out = **in
	}
	if in.MemberRefs != nil {
		in, out := &in.MemberRefs, &out.MemberRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberSelector != nil {
		in, out := &in.MemberSelector, &out.MemberSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationSelector != nil {
		in, out := &in.OrganizationSelector, &out.OrganizationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamSync != nil {
		in, out := &in.TeamSync, &out.TeamSync
		*out = make([]TeamSyncParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamParameters.
func (in *TeamParameters) DeepCopy() *TeamParameters {
	if in == nil {
		return nil
	}
	out := new(TeamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSyncInitParameters) DeepCopyInto(out *TeamSyncInitParameters) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSyncInitParameters.
func (in *TeamSyncInitParameters) DeepCopy() *TeamSyncInitParameters {
	if in == nil {
		return nil
	}
	out := new(TeamSyncInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSyncObservation) DeepCopyInto(out *TeamSyncObservation) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSyncObservation.
func (in *TeamSyncObservation) DeepCopy() *TeamSyncObservation {
	if in == nil {
		return nil
	}
	out := new(TeamSyncObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSyncParameters) DeepCopyInto(out *TeamSyncParameters) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSyncParameters.
func (in *TeamSyncParameters) DeepCopy() *TeamSyncParameters {
	if in == nil {
		return nil
	}
	out := new(TeamSyncParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IsAdmin != nil {
		in, out := &in.IsAdmin, &out.IsAdmin
		*out = new(bool)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAdmin != nil {
		in, out := &in.IsAdmin, &out.IsAdmin
		*out = new(bool)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.IsAdmin != nil {
		in, out := &in.IsAdmin, &out.IsAdmin
		*out = new(bool)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}
