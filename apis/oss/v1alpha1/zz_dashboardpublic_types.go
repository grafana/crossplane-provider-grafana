/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DashboardPublicInitParameters struct {

	// (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	// A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	AccessToken *string `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	// (Boolean) Set to true to show annotations. The default value is false.
	// Set to `true` to show annotations. The default value is `false`.
	AnnotationsEnabled *bool `json:"annotationsEnabled,omitempty" tf:"annotations_enabled,omitempty"`

	// Reference to a Dashboard in oss to populate dashboardUid.
	// +kubebuilder:validation:Optional
	DashboardRef *v1.Reference `json:"dashboardRef,omitempty" tf:"-"`

	// Selector for a Dashboard in oss to populate dashboardUid.
	// +kubebuilder:validation:Optional
	DashboardSelector *v1.Selector `json:"dashboardSelector,omitempty" tf:"-"`

	// (String) The unique identifier of the original dashboard.
	// The unique identifier of the original dashboard.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/oss/v1alpha1.Dashboard
	// +crossplane:generate:reference:extractor=github.com/grafana/crossplane-provider-grafana/config/grafana.OptionalFieldExtractor("uid")
	// +crossplane:generate:reference:refFieldName=DashboardRef
	// +crossplane:generate:reference:selectorFieldName=DashboardSelector
	DashboardUID *string `json:"dashboardUid,omitempty" tf:"dashboard_uid,omitempty"`

	// (Boolean) Set to true to enable the public dashboard. The default value is false.
	// Set to `true` to enable the public dashboard. The default value is `false`.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/oss/v1alpha1.Organization
	// +crossplane:generate:reference:refFieldName=OrganizationRef
	// +crossplane:generate:reference:selectorFieldName=OrganizationSelector
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Reference to a Organization in oss to populate orgId.
	// +kubebuilder:validation:Optional
	OrganizationRef *v1.Reference `json:"organizationRef,omitempty" tf:"-"`

	// Selector for a Organization in oss to populate orgId.
	// +kubebuilder:validation:Optional
	OrganizationSelector *v1.Selector `json:"organizationSelector,omitempty" tf:"-"`

	// (String) Set the share mode. The default value is public.
	// Set the share mode. The default value is `public`.
	Share *string `json:"share,omitempty" tf:"share,omitempty"`

	// (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
	// Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
	TimeSelectionEnabled *bool `json:"timeSelectionEnabled,omitempty" tf:"time_selection_enabled,omitempty"`

	// (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	// The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type DashboardPublicObservation struct {

	// (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	// A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	AccessToken *string `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	// (Boolean) Set to true to show annotations. The default value is false.
	// Set to `true` to show annotations. The default value is `false`.
	AnnotationsEnabled *bool `json:"annotationsEnabled,omitempty" tf:"annotations_enabled,omitempty"`

	// (String) The unique identifier of the original dashboard.
	// The unique identifier of the original dashboard.
	DashboardUID *string `json:"dashboardUid,omitempty" tf:"dashboard_uid,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Set to true to enable the public dashboard. The default value is false.
	// Set to `true` to enable the public dashboard. The default value is `false`.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// (String) Set the share mode. The default value is public.
	// Set the share mode. The default value is `public`.
	Share *string `json:"share,omitempty" tf:"share,omitempty"`

	// (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
	// Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
	TimeSelectionEnabled *bool `json:"timeSelectionEnabled,omitempty" tf:"time_selection_enabled,omitempty"`

	// (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	// The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type DashboardPublicParameters struct {

	// (String) A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	// A public unique identifier of a public dashboard. This is used to construct its URL. It's automatically generated if not provided when creating a public dashboard.
	// +kubebuilder:validation:Optional
	AccessToken *string `json:"accessToken,omitempty" tf:"access_token,omitempty"`

	// (Boolean) Set to true to show annotations. The default value is false.
	// Set to `true` to show annotations. The default value is `false`.
	// +kubebuilder:validation:Optional
	AnnotationsEnabled *bool `json:"annotationsEnabled,omitempty" tf:"annotations_enabled,omitempty"`

	// Reference to a Dashboard in oss to populate dashboardUid.
	// +kubebuilder:validation:Optional
	DashboardRef *v1.Reference `json:"dashboardRef,omitempty" tf:"-"`

	// Selector for a Dashboard in oss to populate dashboardUid.
	// +kubebuilder:validation:Optional
	DashboardSelector *v1.Selector `json:"dashboardSelector,omitempty" tf:"-"`

	// (String) The unique identifier of the original dashboard.
	// The unique identifier of the original dashboard.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/oss/v1alpha1.Dashboard
	// +crossplane:generate:reference:extractor=github.com/grafana/crossplane-provider-grafana/config/grafana.OptionalFieldExtractor("uid")
	// +crossplane:generate:reference:refFieldName=DashboardRef
	// +crossplane:generate:reference:selectorFieldName=DashboardSelector
	// +kubebuilder:validation:Optional
	DashboardUID *string `json:"dashboardUid,omitempty" tf:"dashboard_uid,omitempty"`

	// (Boolean) Set to true to enable the public dashboard. The default value is false.
	// Set to `true` to enable the public dashboard. The default value is `false`.
	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
	// The Organization ID. If not set, the Org ID defined in the provider block will be used.
	// +crossplane:generate:reference:type=github.com/grafana/crossplane-provider-grafana/apis/oss/v1alpha1.Organization
	// +crossplane:generate:reference:refFieldName=OrganizationRef
	// +crossplane:generate:reference:selectorFieldName=OrganizationSelector
	// +kubebuilder:validation:Optional
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Reference to a Organization in oss to populate orgId.
	// +kubebuilder:validation:Optional
	OrganizationRef *v1.Reference `json:"organizationRef,omitempty" tf:"-"`

	// Selector for a Organization in oss to populate orgId.
	// +kubebuilder:validation:Optional
	OrganizationSelector *v1.Selector `json:"organizationSelector,omitempty" tf:"-"`

	// (String) Set the share mode. The default value is public.
	// Set the share mode. The default value is `public`.
	// +kubebuilder:validation:Optional
	Share *string `json:"share,omitempty" tf:"share,omitempty"`

	// (Boolean) Set to true to enable the time picker in the public dashboard. The default value is false.
	// Set to `true` to enable the time picker in the public dashboard. The default value is `false`.
	// +kubebuilder:validation:Optional
	TimeSelectionEnabled *bool `json:"timeSelectionEnabled,omitempty" tf:"time_selection_enabled,omitempty"`

	// (String) The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	// The unique identifier of a public dashboard. It's automatically generated if not provided when creating a public dashboard.
	// +kubebuilder:validation:Optional
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

// DashboardPublicSpec defines the desired state of DashboardPublic
type DashboardPublicSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DashboardPublicParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DashboardPublicInitParameters `json:"initProvider,omitempty"`
}

// DashboardPublicStatus defines the observed state of DashboardPublic.
type DashboardPublicStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DashboardPublicObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DashboardPublic is the Schema for the DashboardPublics API. Manages Grafana public dashboards. Note: This resource is available only with Grafana 10.2+. Official documentation https://grafana.com/docs/grafana/latest/dashboards/dashboard-public/HTTP API https://grafana.com/docs/grafana/next/developers/http_api/dashboard_public/
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,grafana}
type DashboardPublic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DashboardPublicSpec   `json:"spec"`
	Status            DashboardPublicStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DashboardPublicList contains a list of DashboardPublics
type DashboardPublicList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DashboardPublic `json:"items"`
}

// Repository type metadata.
var (
	DashboardPublic_Kind             = "DashboardPublic"
	DashboardPublic_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DashboardPublic_Kind}.String()
	DashboardPublic_KindAPIVersion   = DashboardPublic_Kind + "." + CRDGroupVersion.String()
	DashboardPublic_GroupVersionKind = CRDGroupVersion.WithKind(DashboardPublic_Kind)
)

func init() {
	SchemeBuilder.Register(&DashboardPublic{}, &DashboardPublicList{})
}
