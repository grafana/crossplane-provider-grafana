/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OutgoingWebhookInitParameters struct {

	// (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
	// The auth data of the webhook. Used in Authorization header instead of user/password auth.
	AuthorizationHeaderSecretRef *v1.SecretKeySelector `json:"authorizationHeaderSecretRef,omitempty" tf:"-"`

	// (String) The data of the webhook.
	// The data of the webhook.
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
	// Toggle to send the entire webhook payload instead of using the values in the Data field.
	ForwardWholePayload *bool `json:"forwardWholePayload,omitempty" tf:"forward_whole_payload,omitempty"`

	// (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
	// The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (String) Headers to add to the outgoing webhook request.
	// Headers to add to the outgoing webhook request.
	Headers *string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	// Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	IntegrationFilter []*string `json:"integrationFilter,omitempty" tf:"integration_filter,omitempty"`

	// (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
	// Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
	IsWebhookEnabled *bool `json:"isWebhookEnabled,omitempty" tf:"is_webhook_enabled,omitempty"`

	// (String) The name of the outgoing webhook.
	// The name of the outgoing webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The auth data of the webhook. Used for Basic authentication
	// The auth data of the webhook. Used for Basic authentication
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
	// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	// A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	TriggerTemplate *string `json:"triggerTemplate,omitempty" tf:"trigger_template,omitempty"`

	// (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
	// The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
	TriggerType *string `json:"triggerType,omitempty" tf:"trigger_type,omitempty"`

	// (String) The webhook URL.
	// The webhook URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) Username to use when making the outgoing webhook request.
	// Username to use when making the outgoing webhook request.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OutgoingWebhookObservation struct {

	// (String) The data of the webhook.
	// The data of the webhook.
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
	// Toggle to send the entire webhook payload instead of using the values in the Data field.
	ForwardWholePayload *bool `json:"forwardWholePayload,omitempty" tf:"forward_whole_payload,omitempty"`

	// (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
	// The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (String) Headers to add to the outgoing webhook request.
	// Headers to add to the outgoing webhook request.
	Headers *string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	// Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	IntegrationFilter []*string `json:"integrationFilter,omitempty" tf:"integration_filter,omitempty"`

	// (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
	// Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
	IsWebhookEnabled *bool `json:"isWebhookEnabled,omitempty" tf:"is_webhook_enabled,omitempty"`

	// (String) The name of the outgoing webhook.
	// The name of the outgoing webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
	// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	// A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	TriggerTemplate *string `json:"triggerTemplate,omitempty" tf:"trigger_template,omitempty"`

	// (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
	// The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
	TriggerType *string `json:"triggerType,omitempty" tf:"trigger_type,omitempty"`

	// (String) The webhook URL.
	// The webhook URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) Username to use when making the outgoing webhook request.
	// Username to use when making the outgoing webhook request.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OutgoingWebhookParameters struct {

	// (String, Sensitive) The auth data of the webhook. Used in Authorization header instead of user/password auth.
	// The auth data of the webhook. Used in Authorization header instead of user/password auth.
	// +kubebuilder:validation:Optional
	AuthorizationHeaderSecretRef *v1.SecretKeySelector `json:"authorizationHeaderSecretRef,omitempty" tf:"-"`

	// (String) The data of the webhook.
	// The data of the webhook.
	// +kubebuilder:validation:Optional
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Toggle to send the entire webhook payload instead of using the values in the Data field.
	// Toggle to send the entire webhook payload instead of using the values in the Data field.
	// +kubebuilder:validation:Optional
	ForwardWholePayload *bool `json:"forwardWholePayload,omitempty" tf:"forward_whole_payload,omitempty"`

	// (String) The HTTP method used in the request made by the outgoing webhook. Defaults to POST.
	// The HTTP method used in the request made by the outgoing webhook. Defaults to `POST`.
	// +kubebuilder:validation:Optional
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (String) Headers to add to the outgoing webhook request.
	// Headers to add to the outgoing webhook request.
	// +kubebuilder:validation:Optional
	Headers *string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (List of String) Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	// Restricts the outgoing webhook to only trigger if the event came from a selected integration. If no integrations are selected the outgoing webhook will trigger for any integration.
	// +kubebuilder:validation:Optional
	IntegrationFilter []*string `json:"integrationFilter,omitempty" tf:"integration_filter,omitempty"`

	// (Boolean) Controls whether the outgoing webhook will trigger or is ignored. Defaults to true.
	// Controls whether the outgoing webhook will trigger or is ignored. Defaults to `true`.
	// +kubebuilder:validation:Optional
	IsWebhookEnabled *bool `json:"isWebhookEnabled,omitempty" tf:"is_webhook_enabled,omitempty"`

	// (String) The name of the outgoing webhook.
	// The name of the outgoing webhook.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The auth data of the webhook. Used for Basic authentication
	// The auth data of the webhook. Used for Basic authentication
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the grafana_oncall_team datasource.
	// The ID of the OnCall team. To get one, create a team in Grafana, and navigate to the OnCall plugin (to sync the team with OnCall). You can then get the ID using the `grafana_oncall_team` datasource.
	// +kubebuilder:validation:Optional
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// (String) A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	// A template used to dynamically determine whether the webhook should execute based on the content of the payload.
	// +kubebuilder:validation:Optional
	TriggerTemplate *string `json:"triggerTemplate,omitempty" tf:"trigger_template,omitempty"`

	// (String) The type of event that will cause this outgoing webhook to execute. The types of triggers are: escalation, alert group created, acknowledge, resolve, silence, unsilence, unresolve, unacknowledge. Defaults to escalation.
	// The type of event that will cause this outgoing webhook to execute. The types of triggers are: `escalation`, `alert group created`, `acknowledge`, `resolve`, `silence`, `unsilence`, `unresolve`, `unacknowledge`. Defaults to `escalation`.
	// +kubebuilder:validation:Optional
	TriggerType *string `json:"triggerType,omitempty" tf:"trigger_type,omitempty"`

	// (String) The webhook URL.
	// The webhook URL.
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) Username to use when making the outgoing webhook request.
	// Username to use when making the outgoing webhook request.
	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

// OutgoingWebhookSpec defines the desired state of OutgoingWebhook
type OutgoingWebhookSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OutgoingWebhookParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OutgoingWebhookInitParameters `json:"initProvider,omitempty"`
}

// OutgoingWebhookStatus defines the observed state of OutgoingWebhook.
type OutgoingWebhookStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OutgoingWebhookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OutgoingWebhook is the Schema for the OutgoingWebhooks API. HTTP API https://grafana.com/docs/oncall/latest/oncall-api-reference/outgoing_webhooks/
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,grafana}
type OutgoingWebhook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	Spec   OutgoingWebhookSpec   `json:"spec"`
	Status OutgoingWebhookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OutgoingWebhookList contains a list of OutgoingWebhooks
type OutgoingWebhookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OutgoingWebhook `json:"items"`
}

// Repository type metadata.
var (
	OutgoingWebhook_Kind             = "OutgoingWebhook"
	OutgoingWebhook_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OutgoingWebhook_Kind}.String()
	OutgoingWebhook_KindAPIVersion   = OutgoingWebhook_Kind + "." + CRDGroupVersion.String()
	OutgoingWebhook_GroupVersionKind = CRDGroupVersion.WithKind(OutgoingWebhook_Kind)
)

func init() {
	SchemeBuilder.Register(&OutgoingWebhook{}, &OutgoingWebhookList{})
}
