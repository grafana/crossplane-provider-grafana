---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: rulegroups.alerting.grafana.crossplane.io
spec:
  group: alerting.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the RuleGroups API. Manages Grafana
          Alerting rule groups. Official documentation https://grafana.com/docs/grafana/latest/alerting/alerting-rules/HTTP
          API https://grafana.com/docs/grafana/latest/developers/http_api/alerting_provisioning/#alert-rules
          This resource requires Grafana 9.1.0 or later.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the desired state of RuleGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderRef:
                    description: Reference to a Folder in oss to populate folderUid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderSelector:
                    description: Selector for a Folder in oss to populate folderUid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  organizationRef:
                    description: Reference to a Organization in oss to populate orgId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  organizationSelector:
                    description: Selector for a Organization in oss to populate orgId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.intervalSeconds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.intervalSeconds)
                || (has(self.initProvider) && has(self.initProvider.intervalSeconds))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rule)
                || (has(self.initProvider) && has(self.initProvider.rule))'
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup.
            properties:
              atProvider:
                properties:
                  disableProvenance:
                    description: Defaults to false. Defaults to `false`.
                    type: boolean
                  folderUid:
                    description: |-
                      (String) The UID of the folder that the group belongs to.
                      The UID of the folder that the group belongs to.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  intervalSeconds:
                    description: |-
                      (Number) The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                      The interval, in seconds, at which all rules in the group are evaluated. If a group contains many rules, the rules are evaluated sequentially.
                    type: number
                  name:
                    description: |-
                      (String) The name of the rule group.
                      The name of the rule group.
                    type: string
                  orgId:
                    description: |-
                      (String) The Organization ID. If not set, the Org ID defined in the provider block will be used.
                      The Organization ID. If not set, the Org ID defined in the provider block will be used.
                    type: string
                  rule:
                    description: |-
                      (Block List, Min: 1) The rules within the group. (see below for nested schema)
                      The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to map[].
                            Key-value pairs of metadata to attach to the alert rule that may add user-defined context, but cannot be used for matching, grouping, or routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        condition:
                          description: |-
                            (String) The ref_id of the query node in the data field to use as the alert condition.
                            The `ref_id` of the query node in the `data` field to use as the alert condition.
                          type: string
                        data:
                          description: |-
                            (Block List, Min: 1) A sequence of stages that describe the contents of the rule. (see below for nested schema)
                            A sequence of stages that describe the contents of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: |-
                                  100" if this stage is an expression stage.
                                  The UID of the datasource being queried, or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: |-
                                  (String) Custom JSON data to send to the specified datasource when querying.
                                  Custom JSON data to send to the specified datasource when querying.
                                type: string
                              queryType:
                                description: |-
                                  (String) An optional identifier for the type of query being executed. Defaults to “.
                                  An optional identifier for the type of query being executed. Defaults to “.
                                type: string
                              refId:
                                description: |-
                                  (String) A unique string to identify this query stage within a rule.
                                  A unique string to identify this query stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: |-
                                  (Block List, Min: 1, Max: 1) The time range, relative to when the query is executed, across which to query. (see below for nested schema)
                                  The time range, relative to when the query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range begins.
                                      type: number
                                    to:
                                      description: |-
                                        (Number) The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                        The number of seconds in the past, relative to when the rule is evaluated, at which the time range ends.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                        execErrState:
                          description: |-
                            (String) Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to Alerting.
                            Describes what state to enter when the rule's query is invalid and the rule cannot be executed. Options are OK, Error, KeepLast, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: |-
                            (String) The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to 0.
                            The amount of time for which the rule must be breached for the rule to be considered to be Firing. Before this time has elapsed, the rule is only considered to be Pending. Defaults to `0`.
                          type: string
                        isPaused:
                          description: |-
                            (Boolean) Sets whether the alert should be paused or not. Defaults to false.
                            Sets whether the alert should be paused or not. Defaults to `false`.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to map[].
                            Key-value pairs to attach to the alert rule that can be used in matching, grouping, and routing. Defaults to `map[]`.
                          type: object
                          x-kubernetes-map-type: granular
                        name:
                          description: |-
                            (String) The name of the rule group.
                            The name of the alert rule.
                          type: string
                        noDataState:
                          description: |-
                            (String) Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to NoData.
                            Describes what state to enter when the rule's query returns No Data. Options are OK, NoData, KeepLast, and Alerting. Defaults to `NoData`.
                          type: string
                        notificationSettings:
                          description: |-
                            (Block List, Max: 1) Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled. (see below for nested schema)
                            Notification settings for the rule. If specified, it overrides the notification policies. Available since Grafana 10.4, requires feature flag 'alertingSimplifiedRouting' enabled.
                          items:
                            properties:
                              contactPoint:
                                description: |-
                                  (String) The contact point to route notifications that match this rule to.
                                  The contact point to route notifications that match this rule to.
                                type: string
                              groupBy:
                                description: |-
                                  (List of String) A list of alert labels to group alerts into notifications by. Use the special label ... to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                  A list of alert labels to group alerts into notifications by. Use the special label `...` to group alerts by all labels, effectively disabling grouping. If empty, no grouping is used. If specified, requires labels 'alertname' and 'grafana_folder' to be included.
                                items:
                                  type: string
                                type: array
                              groupInterval:
                                description: |-
                                  (String) Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                  Minimum time interval between two notifications for the same group. Default is 5 minutes.
                                type: string
                              groupWait:
                                description: |-
                                  (String) Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                  Time to wait to buffer alerts of the same group before sending a notification. Default is 30 seconds.
                                type: string
                              muteTimings:
                                description: |-
                                  (List of String) A list of mute timing names to apply to alerts that match this policy.
                                  A list of mute timing names to apply to alerts that match this policy.
                                items:
                                  type: string
                                type: array
                              repeatInterval:
                                description: |-
                                  sending a notification if an alert is still firing. Default is 4 hours.
                                  Minimum time interval for re-sending a notification if an alert is still firing. Default is 4 hours.
                                type: string
                            type: object
                          type: array
                        uid:
                          description: |-
                            (String) The unique identifier of the alert rule.
                            The unique identifier of the alert rule.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
