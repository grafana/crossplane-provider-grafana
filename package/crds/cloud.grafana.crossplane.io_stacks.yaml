---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: stacks.cloud.grafana.crossplane.io
spec:
  group: cloud.grafana.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafana
    kind: Stack
    listKind: StackList
    plural: stacks
    singular: stack
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Stack is the Schema for the Stacks API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Stack
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: Description of stack.
                    type: string
                  name:
                    description: Name of stack. Conventionally matches the url of
                      the instance (e.g. “<stack_slug>.grafana.net”).
                    type: string
                  regionSlug:
                    description: 'Region slug to assign to this stack. Changing region
                      will destroy the existing stack and create a new one in the
                      desired region. Use the region list API to get the list of available
                      regions: https://grafana.com/docs/grafana-cloud/reference/cloud-api/#list-regions.'
                    type: string
                  slug:
                    description: Subdomain that the Grafana instance will be available
                      at (i.e. setting slug to “<stack_slug>” will make the instance
                      available at “https://<stack_slug>.grafana.net".
                    type: string
                  url:
                    description: Custom URL for the Grafana instance. Must have a
                      CNAME setup to point to `.grafana.net` before creating the stack
                    type: string
                  waitForReadiness:
                    description: Whether to wait for readiness of the stack after
                      creating it. The check is a HEAD request to the stack URL (Grafana
                      instance). Defaults to `true`.
                    type: boolean
                  waitForReadinessTimeout:
                    description: How long to wait for readiness (if enabled). Defaults
                      to `5m0s`.
                    type: string
                required:
                - name
                - slug
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: StackStatus defines the observed state of Stack.
            properties:
              atProvider:
                properties:
                  alertmanagerName:
                    description: Name of the Alertmanager instance configured for
                      this stack.
                    type: string
                  alertmanagerStatus:
                    description: Status of the Alertmanager instance configured for
                      this stack.
                    type: string
                  alertmanagerUrl:
                    description: Base URL of the Alertmanager instance configured
                      for this stack.
                    type: string
                  alertmanagerUserId:
                    description: User ID of the Alertmanager instance configured for
                      this stack.
                    type: number
                  graphiteName:
                    type: string
                  graphiteStatus:
                    type: string
                  graphiteUrl:
                    type: string
                  graphiteUserId:
                    type: number
                  id:
                    type: string
                  logsName:
                    type: string
                  logsStatus:
                    type: string
                  logsUrl:
                    type: string
                  logsUserId:
                    type: number
                  orgId:
                    description: Organization id to assign to this stack.
                    type: number
                  orgName:
                    description: Organization name to assign to this stack.
                    type: string
                  orgSlug:
                    description: Organization slug to assign to this stack.
                    type: string
                  prometheusName:
                    description: Prometheus name for this instance.
                    type: string
                  prometheusRemoteEndpoint:
                    description: Use this URL to query hosted metrics data e.g. Prometheus
                      data source in Grafana
                    type: string
                  prometheusRemoteWriteEndpoint:
                    description: Use this URL to send prometheus metrics to Grafana
                      cloud
                    type: string
                  prometheusStatus:
                    description: Prometheus status for this instance.
                    type: string
                  prometheusUrl:
                    description: Prometheus url for this instance.
                    type: string
                  prometheusUserId:
                    description: Prometheus user ID. Used for e.g. remote_write.
                    type: number
                  status:
                    description: Status of the stack.
                    type: string
                  tracesName:
                    type: string
                  tracesStatus:
                    type: string
                  tracesUrl:
                    type: string
                  tracesUserId:
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
